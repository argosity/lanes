// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TimeZone Component matches snapshot 1`] = `
.c6 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  fill: #666666;
  stroke: #666666;
  fill: #865CD6;
  stroke: #865CD6;
}

.c6 g {
  fill: inherit;
  stroke: inherit;
}

.c6 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c6 *[stroke*="#"],
.c6 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c6 *[fill-rule],
.c6 *[FILL-RULE],
.c6 *[fill*="#"],
.c6 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c1 {
  box-sizing: border-box;
  cursor: pointer;
  outline: none;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  font: inherit;
  margin: 0;
  background-color: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #444444;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  outline: none;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border: solid 1px rgba(0,0,0,0.33);
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin: 0;
  padding: 0;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  outline: none;
  max-width: 100%;
  min-width: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin-left: 12px;
  margin-right: 12px;
  padding: 0;
}

.c4 {
  box-sizing: border-box;
  padding: 11px;
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
  outline: none;
  background-color: transparent;
  color: inherit;
  font: inherit;
  font-weight: 700;
  margin: 0;
  width: 100%;
  border: none;
  width: 100%;
  -webkit-appearance: none;
}

.c4::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c4::-moz-placeholder {
  color: #AAAAAA;
}

.c4:-ms-input-placeholder {
  color: #AAAAAA;
}

.c4::-moz-focus-inner {
  border: none;
  outline: none;
}

.c3 {
  width: 100%;
}

@media only screen and (min-width:700px) {
  .c1 {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

@media only screen and (max-width:699px) {
  .c2 {
    border: solid 1px rgba(0,0,0,0.33);
  }
}

@media only screen and (max-width:699px) {
  .c2 {
    margin: 0;
  }
}

@media only screen and (max-width:699px) {
  .c2 {
    padding: 0;
  }
}

@media only screen and (max-width:699px) {
  .c5 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width:699px) {
  .c5 {
    padding: 0;
  }
}

<div
  className="c0"
>
  <button
    aria-label="undefined, America/Chicago"
    className="c1"
    disabled={false}
    href={undefined}
    icon={undefined}
    id={undefined}
    label={undefined}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onMouseDown={[Function]}
    onMouseUp={[Function]}
    type="button"
  >
    <div
      aria-hidden={true}
      aria-label={undefined}
      className="c2"
      direction="row"
    >
      <div
        className="c3"
      >
        <input
          autoComplete="off"
          className="c4"
          defaultValue={undefined}
          id={undefined}
          onFocus={[Function]}
          onInput={[Function]}
          onKeyDown={[Function]}
          placeholder={undefined}
          readOnly={true}
          size={undefined}
          style={
            Object {
              "cursor": "pointer",
            }
          }
          tabIndex="-1"
          type="text"
          value="America/Chicago"
        />
      </div>
      <div
        aria-label={undefined}
        className="c5"
        direction="column"
        style={
          Object {
            "minWidth": "auto",
          }
        }
      >
        <svg
          aria-label="FormDown"
          className="c6"
          color="brand"
          height="24px"
          role="img"
          size={undefined}
          version="1.1"
          viewBox="0 0 24 24"
          width="24px"
        >
          <polyline
            fill="none"
            points="18 9 12 15 6 9"
            stroke="#000"
            strokeWidth="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;
