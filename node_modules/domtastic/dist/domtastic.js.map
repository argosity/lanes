{"version":3,"file":null,"sources":["../src/util.js","../src/selector/index.js","../src/array.js","../src/baseClass.js","../src/css.js","../src/dom/index.js","../src/dom/attr.js","../src/dom/class.js","../src/dom/contains.js","../src/dom/data.js","../src/dom/extra.js","../src/dom/html.js","../src/selector/closest.js","../src/event/index.js","../src/event/trigger.js","../src/event/ready.js","../src/noconflict.js","../src/selector/extra.js","../src/type.js","../src/index.js"],"sourcesContent":["/*\n * @module Util\n */\n\n/*\n * Reference to the global scope\n * @private\n */\n\nexport const global = new Function('return this')();\n\n/**\n * Convert `NodeList` to `Array`.\n *\n * @param {NodeList|Array} collection\n * @return {Array}\n * @private\n */\n\nexport const toArray = collection => {\n  const length = collection.length;\n  const result = new Array(length);\n  for(let i = 0; i < length; i++) {\n    result[i] = collection[i];\n  }\n  return result;\n};\n\n/**\n * Faster alternative to [].forEach method\n *\n * @param {Node|NodeList|Array} collection\n * @param {Function} callback\n * @return {Node|NodeList|Array}\n * @private\n */\n\nexport const each = (collection, callback, thisArg) => {\n  const length = collection.length;\n  if(length !== undefined && collection.nodeType === undefined) {\n    for(let i = 0; i < length; i++) {\n      callback.call(thisArg, collection[i], i, collection);\n    }\n  } else {\n    callback.call(thisArg, collection, 0, collection);\n  }\n  return collection;\n};\n\n/**\n * Assign enumerable properties from source object(s) to target object\n *\n * @method extend\n * @param {Object} target Object to extend\n * @param {Object} [source] Object to extend from\n * @return {Object} Extended object\n * @example\n *     $.extend({a: 1}, {b: 2});\n *     // {a: 1, b: 2}\n * @example\n *     $.extend({a: 1}, {b: 2}, {a: 3});\n *     // {a: 3, b: 2}\n */\n\nexport const extend = (target, ...sources) => {\n  sources.forEach(src => {\n    for(let prop in src) {\n      target[prop] = src[prop];\n    }\n  });\n  return target;\n};\n\n/**\n * Return the collection without duplicates\n *\n * @param collection Collection to remove duplicates from\n * @return {Node|NodeList|Array}\n * @private\n */\n\nexport const uniq = collection => collection.filter((item, index) => collection.indexOf(item) === index);\n","/**\n * @module Selector\n */\n\nimport { global, each } from '../util';\n\nlet isPrototypeSet = false;\n\nconst reFragment = /^\\s*<(\\w+|!)[^>]*>/;\nconst reSingleTag = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/;\nconst reSimpleSelector = /^[\\.#]?[\\w-]*$/;\n\n/*\n * Versatile wrapper for `querySelectorAll`.\n *\n * @param {String|Node|NodeList|Array} selector Query selector, `Node`, `NodeList`, array of elements, or HTML fragment string.\n * @param {String|Node|NodeList} context=document The context for the selector to query elements.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     var $items = $(.items');\n * @example\n *     var $element = $(domElement);\n * @example\n *     var $list = $(nodeList, document.body);\n * @example\n *     var $element = $('<p>evergreen</p>');\n */\n\nexport const $ = (selector, context = document) => {\n\n  let collection;\n\n  if(!selector) {\n\n    collection = document.querySelectorAll(null);\n\n  } else if(selector instanceof Wrapper) {\n\n    return selector;\n\n  } else if(typeof selector !== 'string') {\n\n    collection = selector.nodeType || selector === window ? [selector] : selector;\n\n  } else if(reFragment.test(selector)) {\n\n    collection = createFragment(selector);\n\n  } else {\n\n    context = typeof context === 'string' ? document.querySelector(context) : context.length ? context[0] : context;\n\n    collection = querySelector(selector, context);\n\n  }\n\n  return wrap(collection);\n\n};\n\n/*\n * Find descendants matching the provided `selector` for each element in the collection.\n *\n * @param {String|Node|NodeList|Array} selector Query selector, `Node`, `NodeList`, array of elements, or HTML fragment string.\n * @return {Object} The wrapped collection\n * @example\n *     $('.selector').find('.deep').$('.deepest');\n */\n\nexport const find = function(selector) {\n  const nodes = [];\n  each(this, node => each(querySelector(selector, node), child => {\n    if(nodes.indexOf(child) === -1) {\n      nodes.push(child);\n    }\n  }));\n  return $(nodes);\n};\n\n/*\n * Returns `true` if the element would be selected by the specified selector string; otherwise, returns `false`.\n *\n * @param {Node} element Element to test\n * @param {String} selector Selector to match against element\n * @return {Boolean}\n *\n * @example\n *     $.matches(element, '.match');\n */\n\nexport const matches = (() => {\n  const context = typeof Element !== 'undefined' ? Element.prototype : global;\n  const _matches = context.matches || context.matchesSelector || context.mozMatchesSelector || context.msMatchesSelector || context.oMatchesSelector || context.webkitMatchesSelector;\n  return (element, selector) => _matches.call(element, selector);\n})();\n\n/*\n * Use the faster `getElementById`, `getElementsByClassName` or `getElementsByTagName` over `querySelectorAll` if possible.\n *\n * @private\n * @param {String} selector Query selector.\n * @param {Node} context The context for the selector to query elements.\n * @return {Object} NodeList, HTMLCollection, or Array of matching elements (depending on method used).\n */\n\nconst querySelector = (selector, context) => {\n\n  const isSimpleSelector = reSimpleSelector.test(selector);\n\n  if(isSimpleSelector) {\n    if(selector[0] === '#') {\n      const element = (context.getElementById ? context : document).getElementById(selector.slice(1));\n      return element ? [element] : [];\n    }\n    if(selector[0] === '.') {\n      return context.getElementsByClassName(selector.slice(1));\n    }\n    return context.getElementsByTagName(selector);\n  }\n\n  return context.querySelectorAll(selector);\n\n};\n\n/*\n * Create DOM fragment from an HTML string\n *\n * @private\n * @param {String} html String representing HTML.\n * @return {NodeList}\n */\n\nconst createFragment = html => {\n\n  if(reSingleTag.test(html)) {\n    return [document.createElement(RegExp.$1)];\n  }\n\n  const elements = [];\n  const container = document.createElement('div');\n  const children = container.childNodes;\n\n  container.innerHTML = html;\n\n  for(let i = 0, l = children.length; i < l; i++) {\n    elements.push(children[i]);\n  }\n\n  return elements;\n};\n\n/*\n * Calling `$(selector)` returns a wrapped collection of elements.\n *\n * @private\n * @param {NodeList|Array} collection Element(s) to wrap.\n * @return Object) The wrapped collection\n */\n\nconst wrap = collection => {\n\n  if(!isPrototypeSet) {\n    Wrapper.prototype = $.fn;\n    Wrapper.prototype.constructor = Wrapper;\n    isPrototypeSet = true;\n  }\n\n  return new Wrapper(collection);\n};\n\n/*\n * Constructor for the Object.prototype strategy\n *\n * @constructor\n * @private\n * @param {NodeList|Array} collection Element(s) to wrap.\n */\n\nexport const Wrapper = function(collection) {\n  let i = 0;\n  const length = collection.length;\n  for(; i < length;) {\n    this[i] = collection[i++];\n  }\n  this.length = length;\n};\n","/**\n * @module Array\n */\n\nimport { each as _each, toArray } from './util';\nimport { $, matches } from './selector/index';\n\nconst ArrayProto = Array.prototype;\n\n/**\n * Checks if the given callback returns a true(-ish) value for each element in the collection.\n *\n * @param {Function} callback Function to execute for each element, invoked with `element` as argument.\n * @param {Object} [thisArg] Value to use as `this` when executing `callback`.\n * @return {Boolean} Whether each element passed the callback check.\n * @example\n *     $('.items').every(function(element) {\n *         return element.hasAttribute('active')\n *     });\n *     // true/false\n */\n\nexport const every = ArrayProto.every;\n\n/**\n * Filter the collection by selector or function, and return a new collection with the result.\n *\n * @param {String|Function} selector Selector or function to filter the collection.\n * @param {Object} [thisArg] Value to use as `this` when executing `callback`.\n * @return {Object} A new wrapped collection\n * @chainable\n * @example\n *     $('.items').filter('.active');\n * @example\n *     $('.items').filter(function(element) {\n *         return element.hasAttribute('active')\n *     });\n */\n\nexport const filter = function(selector, thisArg) {\n  const callback = typeof selector === 'function' ? selector : element => matches(element, selector);\n  return $(ArrayProto.filter.call(this, callback, thisArg));\n};\n\n/**\n * Execute a function for each element in the collection.\n *\n * @param {Function} callback Function to execute for each element, invoked with `element` as argument.\n * @param {Object} [thisArg] Value to use as `this` when executing `callback`.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').forEach(function(element) {\n *         element.style.color = 'evergreen';\n *     );\n */\n\nexport const forEach = function(callback, thisArg) {\n  return _each(this, callback, thisArg);\n};\n\nexport const each = forEach;\n\n/**\n * Returns the index of an element in the collection.\n *\n * @param {Node} element\n * @return {Number} The zero-based index, -1 if not found.\n * @example\n *     $('.items').indexOf(element);\n *     // 2\n */\n\nexport const indexOf = ArrayProto.indexOf;\n\n/**\n * Create a new collection by executing the callback for each element in the collection.\n *\n * @param {Function} callback Function to execute for each element, invoked with `element` as argument.\n * @param {Object} [thisArg] Value to use as `this` when executing `callback`.\n * @return {Array} Collection with the return value of the executed callback for each element.\n * @example\n *     $('.items').map(function(element) {\n *         return element.getAttribute('name')\n *     });\n *     // ['ever', 'green']\n */\n\nexport const map = ArrayProto.map;\n\n/**\n * Removes the last element from the collection, and returns that element.\n *\n * @return {Object} The last element from the collection.\n * @example\n *     var lastElement = $('.items').pop();\n */\n\nexport const pop = ArrayProto.pop;\n\n/**\n * Adds one or more elements to the end of the collection, and returns the new length of the collection.\n *\n * @param {Object} element Element(s) to add to the collection\n * @return {Number} The new length of the collection\n * @example\n *     $('.items').push(element);\n */\n\nexport const push = ArrayProto.push;\n\n/**\n * Apply a function against each element in the collection, and this accumulator function has to reduce it\n * to a single value.\n *\n * @param {Function} callback Function to execute on each value in the array, taking four arguments (see example).\n * @param {Mixed} initialValue Object to use as the first argument to the first call of the callback.\n * @example\n *     $('.items').reduce(function(previousValue, element, index, collection) {\n *         return previousValue + element.clientHeight;\n *     }, 0);\n *     // [total height of elements]\n */\n\nexport const reduce = ArrayProto.reduce;\n\n/**\n * Apply a function against each element in the collection (from right-to-left), and this accumulator function has\n * to reduce it to a single value.\n *\n * @param {Function} callback Function to execute on each value in the array, taking four arguments (see example).\n * @param {Mixed} initialValue Object to use as the first argument to the first call of the callback.\n * @example\n *     $('.items').reduceRight(function(previousValue, element, index, collection) {\n *         return previousValue + element.textContent;\n *     }, '')\n *     // [reversed text of elements]\n */\n\nexport const reduceRight = ArrayProto.reduceRight;\n\n/**\n * Reverses an array in place. The first array element becomes the last and the last becomes the first.\n *\n * @return {Object} The wrapped collection, reversed\n * @chainable\n * @example\n *     $('.items').reverse();\n */\n\nexport const reverse = function() {\n  return $(toArray(this).reverse());\n};\n\n/**\n * Removes the first element from the collection, and returns that element.\n *\n * @return {Object} The first element from the collection.\n * @example\n *     var firstElement = $('.items').shift();\n */\n\nexport const shift = ArrayProto.shift;\n\n/**\n * Checks if the given callback returns a true(-ish) value for any of the elements in the collection.\n *\n * @param {Function} callback Function to execute for each element, invoked with `element` as argument.\n * @return {Boolean} Whether any element passed the callback check.\n * @example\n *     $('.items').some(function(element) {\n *         return element.hasAttribute('active')\n *     });\n *     // true/false\n */\n\nexport const some = ArrayProto.some;\n\n/**\n * Adds one or more elements to the beginning of the collection, and returns the new length of the collection.\n *\n * @param {Object} element Element(s) to add to the collection\n * @return {Number} The new length of the collection\n * @example\n *     $('.items').unshift(element);\n */\n\nexport const unshift = ArrayProto.unshift;\n","/**\n * @module BaseClass\n */\n\nimport { $ as selector, Wrapper } from './selector/index';\nimport { extend } from './util';\n\nexport default function(api) {\n\n  /**\n   * Provide subclass for classes or components to extend from.\n   * The opposite and successor of plugins (no need to extend `$.fn` anymore, complete control).\n   *\n   * @return {Class} The class to extend from, including all `$.fn` methods.\n   * @example\n   *     import { BaseClass } from  'domtastic';\n   *\n   *     class MyComponent extends BaseClass {\n   *         doSomething() {\n   *             return this.addClass('.foo');\n   *         }\n   *     }\n   *\n   *     let component = new MyComponent('body');\n   *     component.doSomething();\n   *\n   * @example\n   *     import $ from  'domtastic';\n   *\n   *     class MyComponent extends $.BaseClass {\n   *         progress(value) {\n   *             return this.attr('data-progress', value);\n   *         }\n   *     }\n   *\n   *     let component = new MyComponent(document.body);\n   *     component.progress('ive').append('<p>enhancement</p>');\n   */\n\n  class BaseClass {\n    constructor() {\n      Wrapper.call(this, selector(...arguments));\n    }\n  }\n  extend(BaseClass.prototype, api);\n  return BaseClass;\n}\n","/**\n * @module CSS\n */\n\nimport { each } from './util';\n\nconst isNumeric = value => !isNaN(parseFloat(value)) && isFinite(value);\n\nconst camelize = value => value.replace(/-([\\da-z])/gi, (matches, letter) => letter.toUpperCase());\n\nconst dasherize = value => value.replace(/([a-z\\d])([A-Z])/g, '$1-$2').toLowerCase();\n\n/**\n * Get the value of a style property for the first element, or set one or more style properties for each element in the collection.\n *\n * @param {String|Object} key The name of the style property to get or set. Or an object containing key-value pairs to set as style properties.\n * @param {String} [value] The value of the style property to set.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').css('padding-left'); // get\n *     $('.item').css('color', '#f00'); // set\n *     $('.item').css({'border-width': '1px', display: 'inline-block'}); // set multiple\n */\n\nexport const css = function(key, value) {\n\n  let styleProps, prop, val;\n\n  if(typeof key === 'string') {\n    key = camelize(key);\n\n    if(typeof value === 'undefined') {\n      let element = this.nodeType ? this : this[0];\n      if(element) {\n        val = element.style[key];\n        return isNumeric(val) ? parseFloat(val) : val;\n      }\n      return undefined;\n    }\n\n    styleProps = {};\n    styleProps[key] = value;\n  } else {\n    styleProps = key;\n    for(prop in styleProps) {\n      val = styleProps[prop];\n      delete styleProps[prop];\n      styleProps[camelize(prop)] = val;\n    }\n  }\n\n  each(this, element => {\n    for(prop in styleProps) {\n      if(styleProps[prop] || styleProps[prop] === 0) {\n        element.style[prop] = styleProps[prop];\n      } else {\n        element.style.removeProperty(dasherize(prop));\n      }\n    }\n  });\n\n  return this;\n};\n","/**\n * @module DOM\n */\n\nimport { toArray } from '../util';\nimport { $ } from '../selector/index';\n\nconst forEach = Array.prototype.forEach;\n\n/**\n * Append element(s) to each element in the collection.\n *\n * @param {String|Node|NodeList|Object} element What to append to the element(s).\n * Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').append('<p>more</p>');\n */\n\nexport const append = function(element) {\n  if(this instanceof Node) {\n    if(typeof element === 'string') {\n      this.insertAdjacentHTML('beforeend', element);\n    } else {\n      if(element instanceof Node) {\n        this.appendChild(element);\n      } else {\n        const elements = element instanceof NodeList ? toArray(element) : element;\n        forEach.call(elements, this.appendChild.bind(this));\n      }\n    }\n  } else {\n    _each(this, append, element);\n  }\n  return this;\n};\n\n/**\n * Place element(s) at the beginning of each element in the collection.\n *\n * @param {String|Node|NodeList|Object} element What to place at the beginning of the element(s).\n * Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').prepend('<span>start</span>');\n */\n\nexport const prepend = function(element) {\n  if(this instanceof Node) {\n    if(typeof element === 'string') {\n      this.insertAdjacentHTML('afterbegin', element);\n    } else {\n      if(element instanceof Node) {\n        this.insertBefore(element, this.firstChild);\n      } else {\n        let elements = element instanceof NodeList ? toArray(element) : element;\n        forEach.call(elements.reverse(), prepend.bind(this));\n      }\n    }\n  } else {\n    _each(this, prepend, element);\n  }\n  return this;\n};\n\n/**\n * Place element(s) before each element in the collection.\n *\n * @param {String|Node|NodeList|Object} element What to place as sibling(s) before to the element(s).\n * Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').before('<p>prefix</p>');\n */\n\nexport const before = function(element) {\n  if(this instanceof Node) {\n    if(typeof element === 'string') {\n      this.insertAdjacentHTML('beforebegin', element);\n    } else {\n      if(element instanceof Node) {\n        this.parentNode.insertBefore(element, this);\n      } else {\n        const elements = element instanceof NodeList ? toArray(element) : element;\n        forEach.call(elements, before.bind(this));\n      }\n    }\n  } else {\n    _each(this, before, element);\n  }\n  return this;\n};\n\n/**\n * Place element(s) after each element in the collection.\n *\n * @param {String|Node|NodeList|Object} element What to place as sibling(s) after to the element(s). Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').after('<span>suf</span><span>fix</span>');\n */\n\nexport const after = function(element) {\n  if(this instanceof Node) {\n    if(typeof element === 'string') {\n      this.insertAdjacentHTML('afterend', element);\n    } else {\n      if(element instanceof Node) {\n        this.parentNode.insertBefore(element, this.nextSibling);\n      } else {\n        const elements = element instanceof NodeList ? toArray(element) : element;\n        forEach.call(elements.reverse(), after.bind(this));\n      }\n    }\n  } else {\n    _each(this, after, element);\n  }\n  return this;\n};\n\n/**\n * Clone a wrapped object.\n *\n * @return {Object} Wrapped collection of cloned nodes.\n * @example\n *     $(element).clone();\n */\n\nexport const clone = function() {\n  return $(_clone(this));\n};\n\n/**\n * Clone an object\n *\n * @param {String|Node|NodeList|Array} element The element(s) to clone.\n * @return {String|Node|NodeList|Array} The cloned element(s)\n * @private\n */\n\nexport const _clone = element => {\n  if(typeof element === 'string') {\n    return element;\n  } else if(element instanceof Node) {\n    return element.cloneNode(true);\n  } else if('length' in element) {\n    return [].map.call(element, el => el.cloneNode(true));\n  }\n  return element;\n};\n\n/**\n * Specialized iteration, applying `fn` in reversed manner to a clone of each element, but the provided one.\n *\n * @param {NodeList|Array} collection\n * @param {Function} fn\n * @param {Node} element\n * @private\n */\n\nexport const _each = (collection, fn, element) => {\n  let l = collection.length;\n  while(l--) {\n    const elm = l === 0 ? element : _clone(element);\n    fn.call(collection[l], elm);\n  }\n};\n","/**\n * @module Attr\n */\n\nimport { each } from '../util';\n\n/**\n * Get the value of an attribute for the first element, or set one or more attributes for each element in the collection.\n *\n * @param {String|Object} key The name of the attribute to get or set. Or an object containing key-value pairs to set as attributes.\n * @param {String} [value] The value of the attribute to set.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').attr('attrName'); // get\n *     $('.item').attr('attrName', 'attrValue'); // set\n *     $('.item').attr({attr1: 'value1', 'attr-2': 'value2'}); // set multiple\n */\n\nexport const attr = function(key, value) {\n\n  if(typeof key === 'string' && typeof value === 'undefined') {\n    const element = this.nodeType ? this : this[0];\n    return element ? element.getAttribute(key) : undefined;\n  }\n\n  return each(this, element => {\n    if(typeof key === 'object') {\n      for(let attr in key) {\n        element.setAttribute(attr, key[attr]);\n      }\n    } else {\n      element.setAttribute(key, value);\n    }\n  });\n};\n\n/**\n * Remove attribute from each element in the collection.\n *\n * @param {String} key Attribute name\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').removeAttr('attrName');\n */\n\nexport const removeAttr = function(key) {\n  return each(this, element => element.removeAttribute(key));\n};\n","/**\n * @module Class\n */\n\nimport { each } from '../util';\n\n/**\n * Add a class to the element(s)\n *\n * @param {String} value Space-separated class name(s) to add to the element(s).\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').addClass('bar');\n *     $('.item').addClass('bar foo');\n */\n\nexport const addClass = function(value) {\n  if(value && value.length) {\n    each(value.split(' '), _each.bind(this, 'add'));\n  }\n  return this;\n};\n\n/**\n * Remove a class from the element(s)\n *\n * @param {String} value Space-separated class name(s) to remove from the element(s).\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').removeClass('bar');\n *     $('.items').removeClass('bar foo');\n */\n\nexport const removeClass = function(value) {\n  if(value && value.length) {\n    each(value.split(' '), _each.bind(this, 'remove'));\n  }\n  return this;\n};\n\n/**\n * Toggle a class at the element(s)\n *\n * @param {String} value Space-separated class name(s) to toggle at the element(s).\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').toggleClass('bar');\n *     $('.item').toggleClass('bar foo');\n */\n\nexport const toggleClass = function(value) {\n  if(value && value.length) {\n    each(value.split(' '), _each.bind(this, 'toggle'));\n  }\n  return this;\n};\n\n/**\n * Check if the element(s) have a class.\n *\n * @param {String} value Check if the DOM element contains the class name. When applied to multiple elements,\n * returns `true` if _any_ of them contains the class name.\n * @return {Boolean} Whether the element's class attribute contains the class name.\n * @example\n *     $('.item').hasClass('bar');\n */\n\nexport const hasClass = function(value) {\n  return (this.nodeType ? [this] : this).some(element => element.classList.contains(value));\n};\n\n/**\n * Specialized iteration, applying `fn` of the classList API to each element.\n *\n * @param {String} fnName\n * @param {String} className\n * @private\n */\n\nconst _each = function(fnName, className) {\n  return each(this, element => element.classList[fnName](className));\n};\n","/**\n * @module contains\n */\n\n/**\n * Test whether an element contains another element in the DOM.\n *\n * @param {Element} container The element that may contain the other element.\n * @param {Element} element The element that may be a descendant of the other element.\n * @return {Boolean} Whether the `container` element contains the `element`.\n * @example\n *     $.contains(parentElement, childElement);\n *     // true/false\n */\n\nexport const contains = (container, element) => {\n  if(!container || !element || container === element) {\n    return false;\n  } else if(container.contains) {\n    return container.contains(element);\n  } else if(container.compareDocumentPosition) {\n    return !(container.compareDocumentPosition(element) & Node.DOCUMENT_POSITION_DISCONNECTED);\n  }\n  return false;\n};\n","/**\n * @module Data\n */\n\nimport { each } from '../util';\n\nconst DATAKEYPROP = '__DOMTASTIC_DATA__';\n\n/**\n * Get data from first element, or set data for each element in the collection.\n *\n * @param {String} key The key for the data to get or set.\n * @param {String} [value] The data to set.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').data('attrName'); // get\n *     $('.item').data('attrName', {any: 'data'}); // set\n */\n\nexport const data = function(key, value) {\n\n  if(typeof key === 'string' && typeof value === 'undefined') {\n    const element = this.nodeType ? this : this[0];\n    return element && element[DATAKEYPROP] ? element[DATAKEYPROP][key] : undefined;\n  }\n\n  return each(this, element => {\n    element[DATAKEYPROP] = element[DATAKEYPROP] || {};\n    element[DATAKEYPROP][key] = value;\n  });\n};\n\n/**\n * Get property from first element, or set property on each element in the collection.\n *\n * @param {String} key The name of the property to get or set.\n * @param {String} [value] The value of the property to set.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').prop('attrName'); // get\n *     $('.item').prop('attrName', 'attrValue'); // set\n */\n\nexport const prop = function(key, value) {\n\n  if(typeof key === 'string' && typeof value === 'undefined') {\n    const element = this.nodeType ? this : this[0];\n    return element && element ? element[key] : undefined;\n  }\n\n  return each(this, element => element[key] = value);\n};\n","/**\n * @module DOM (extra)\n */\n\nimport { each } from '../util';\nimport { append, before } from './index';\nimport { $ } from '../selector/index';\n\n/**\n * Append each element in the collection to the specified element(s).\n *\n * @param {Node|NodeList|Object} element What to append the element(s) to. Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').appendTo(container);\n */\n\nexport const appendTo = function(element) {\n  const context = typeof element === 'string' ? $(element) : element;\n  append.call(context, this);\n  return this;\n};\n\n/*\n * Empty each element in the collection.\n *\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').empty();\n */\n\nexport const empty = function() {\n  return each(this, element => element.innerHTML = '');\n};\n\n/**\n * Remove the collection from the DOM.\n *\n * @return {Array} Array containing the removed elements\n * @example\n *     $('.item').remove();\n */\n\nexport const remove = function() {\n  return each(this, element => {\n    if(element.parentNode) {\n      element.parentNode.removeChild(element);\n    }\n  });\n};\n\n/**\n * Replace each element in the collection with the provided new content, and return the array of elements that were replaced.\n *\n * @return {Array} Array containing the replaced elements\n */\n\nexport const replaceWith = function() {\n  return before.apply(this, arguments).remove();\n};\n\n/**\n * Get the `textContent` from the first, or set the `textContent` of each element in the collection.\n *\n * @param {String} [value]\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').text('New content');\n */\n\nexport const text = function(value) {\n\n  if(value === undefined) {\n    return this[0].textContent;\n  }\n\n  return each(this, element => element.textContent = '' + value);\n};\n\n/**\n * Get the `value` from the first, or set the `value` of each element in the collection.\n *\n * @param {String} [value]\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('input.firstName').value('New value');\n */\n\nexport const val = function(value) {\n\n  if(value === undefined) {\n    return this[0].value;\n  }\n\n  return each(this, element => element.value = value);\n};\n","/**\n * @module HTML\n */\n\nimport { each } from '../util';\n\n/*\n * Get the HTML contents of the first element, or set the HTML contents for each element in the collection.\n *\n * @param {String} [fragment] HTML fragment to set for the element. If this argument is omitted, the HTML contents are returned.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').html();\n *     $('.item').html('<span>more</span>');\n */\n\nexport const html = function(fragment) {\n\n  if(typeof fragment !== 'string') {\n    const element = this.nodeType ? this : this[0];\n    return element ? element.innerHTML : undefined;\n  }\n\n  return each(this, element => element.innerHTML = fragment);\n};\n","/**\n * @module closest\n */\n\nimport { $, matches } from './index';\nimport { each, uniq } from '../util';\n\n/**\n * Return the closest element matching the selector (starting by itself) for each element in the collection.\n *\n * @param {String} selector Filter\n * @param {Object} [context] If provided, matching elements must be a descendant of this element\n * @return {Object} New wrapped collection (containing zero or one element)\n * @chainable\n * @example\n *     $('.selector').closest('.container');\n */\n\nexport const closest = (() => {\n\n  const closest = function(selector, context) {\n    const nodes = [];\n    each(this, node => {\n      while(node && node !== context) {\n        if(matches(node, selector)) {\n          nodes.push(node);\n          break;\n        }\n        node = node.parentElement;\n      }\n    });\n    return $(uniq(nodes));\n  };\n\n  return typeof Element === 'undefined' || !Element.prototype.closest ? closest : function(selector, context) {\n    if(!context) {\n      const nodes = [];\n      each(this, node => {\n        const n = node.closest(selector);\n        if(n) {\n          nodes.push(n);\n        }\n      });\n      return $(uniq(nodes));\n    } else {\n      return closest.call(this, selector, context);\n    }\n  };\n})();\n","/**\n * @module Events\n */\n\nimport { each } from '../util';\nimport { closest } from '../selector/closest';\n\n/**\n * Shorthand for `addEventListener`. Supports event delegation if a filter (`selector`) is provided.\n *\n * @param {String} eventNames List of space-separated event types to be added to the element(s)\n * @param {String} [selector] Selector to filter descendants that delegate the event to this element.\n * @param {Function} handler Event handler\n * @param {Boolean} useCapture=false\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').on('click', callback);\n *     $('.container').on('click focus', '.item', handler);\n */\n\nexport const on = function(eventNames, selector, handler, useCapture, once) {\n\n  if(typeof selector === 'function') {\n    handler = selector;\n    selector = null;\n  }\n\n  let parts,\n    namespace,\n    eventListener;\n\n  eventNames.split(' ').forEach(eventName => {\n\n    parts = eventName.split('.');\n    eventName = parts[0] || null;\n    namespace = parts[1] || null;\n\n    eventListener = proxyHandler(handler);\n\n    each(this, element => {\n\n      if(selector) {\n        eventListener = delegateHandler.bind(element, selector, eventListener);\n      }\n\n      if(once) {\n        const listener = eventListener;\n        eventListener = event => {\n          off.call(element, eventNames, selector, handler, useCapture);\n          listener.call(element, event);\n        };\n      }\n\n      element.addEventListener(eventName, eventListener, useCapture || false);\n\n      getHandlers(element).push({\n        eventName,\n        handler,\n        eventListener,\n        selector,\n        namespace\n      });\n    });\n\n  }, this);\n\n  return this;\n};\n\n/**\n * Shorthand for `removeEventListener`.\n *\n * @param {String} eventNames List of space-separated event types to be removed from the element(s)\n * @param {String} [selector] Selector to filter descendants that undelegate the event to this element.\n * @param {Function} handler Event handler\n * @param {Boolean} useCapture=false\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').off('click', callback);\n *     $('#my-element').off('myEvent myOtherEvent');\n *     $('.item').off();\n */\n\nexport const off = function(eventNames = '', selector, handler, useCapture) {\n\n  if(typeof selector === 'function') {\n    handler = selector;\n    selector = null;\n  }\n\n  let parts,\n    namespace,\n    handlers;\n\n  eventNames.split(' ').forEach(eventName => {\n\n    parts = eventName.split('.');\n    eventName = parts[0] || null;\n    namespace = parts[1] || null;\n\n    return each(this, element => {\n\n      handlers = getHandlers(element);\n\n      each(handlers.filter(item => {\n        return (\n        (!eventName || item.eventName === eventName) &&\n        (!namespace || item.namespace === namespace) &&\n        (!handler || item.handler === handler) &&\n        (!selector || item.selector === selector));\n      }), item => {\n        element.removeEventListener(item.eventName, item.eventListener, useCapture || false);\n        handlers.splice(handlers.indexOf(item), 1);\n      });\n\n      if(!eventName && !namespace && !selector && !handler) {\n        clearHandlers(element);\n      } else if(handlers.length === 0) {\n        clearHandlers(element);\n      }\n\n    });\n\n  }, this);\n\n  return this;\n};\n\n/**\n * Add event listener and execute the handler at most once per element.\n *\n * @param eventNames\n * @param selector\n * @param handler\n * @param useCapture\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').one('click', callback);\n */\n\nexport const one = function(eventNames, selector, handler, useCapture) {\n  return on.call(this, eventNames, selector, handler, useCapture, 1);\n};\n\n/**\n * Get event handlers from an element\n *\n * @private\n * @param {Node} element\n * @return {Array}\n */\n\nconst eventKeyProp = '__domtastic_event__';\nlet id = 1;\nlet handlers = {};\nlet unusedKeys = [];\n\nexport const getHandlers = element => {\n  if(!element[eventKeyProp]) {\n    element[eventKeyProp] = unusedKeys.length === 0 ? ++id : unusedKeys.pop();\n  }\n  const key = element[eventKeyProp];\n  return handlers[key] || (handlers[key] = []);\n};\n\n/**\n * Clear event handlers for an element\n *\n * @private\n * @param {Node} element\n */\n\nexport const clearHandlers = element => {\n  const key = element[eventKeyProp];\n  if(handlers[key]) {\n    handlers[key] = null;\n    element[eventKeyProp] = null;\n    unusedKeys.push(key);\n  }\n};\n\n/**\n * Function to create a handler that augments the event object with some extra methods,\n * and executes the callback with the event and the event data (i.e. `event.detail`).\n *\n * @private\n * @param handler Callback to execute as `handler(event, data)`\n * @return {Function}\n */\n\nexport const proxyHandler = handler => function(event) {\n  return handler.call(this, augmentEvent(event));\n};\n\nconst eventMethods = {\n  preventDefault: 'isDefaultPrevented',\n  stopImmediatePropagation: 'isImmediatePropagationStopped',\n  stopPropagation: 'isPropagationStopped'\n};\nconst returnTrue = () => true;\nconst returnFalse = () => false;\n\n/**\n * Attempt to augment events and implement something closer to DOM Level 3 Events.\n *\n * @private\n * @param {Object} event\n * @return {Function}\n */\n\nconst augmentEvent = event => {\n  if(!event.isDefaultPrevented || event.stopImmediatePropagation || event.stopPropagation) {\n    for(const methodName in eventMethods) {\n      (function(methodName, testMethodName, originalMethod) {\n        event[methodName] = function() {\n          this[testMethodName] = returnTrue;\n          return originalMethod && originalMethod.apply(this, arguments);\n        };\n        event[testMethodName] = returnFalse;\n      }(methodName, eventMethods[methodName], event[methodName]));\n    }\n    if(event._preventDefault) {\n      event.preventDefault();\n    }\n  }\n  return event;\n};\n\n/**\n * Function to test whether delegated events match the provided `selector` (filter),\n * if the event propagation was stopped, and then actually call the provided event handler.\n * Use `this` instead of `event.currentTarget` on the event object.\n *\n * @private\n * @param {String} selector Selector to filter descendants that undelegate the event to this element.\n * @param {Function} handler Event handler\n * @param {Event} event\n */\n\nexport const delegateHandler = (selector, handler, event) => {\n  const eventTarget = event._target || event.target;\n  const currentTarget = closest.call([eventTarget], selector, this)[0];\n  if(currentTarget && currentTarget !== this) {\n    if(currentTarget === eventTarget || !(event.isPropagationStopped && event.isPropagationStopped())) {\n      handler.call(currentTarget, event);\n    }\n  }\n};\n\nexport const bind = on;\nexport const unbind = off;\n","/**\n * @module trigger\n */\n\nimport { global, each } from '../util';\nimport { contains } from '../dom/contains';\n\nconst reMouseEvent = /^(?:mouse|pointer|contextmenu)|click/;\nconst reKeyEvent = /^key/;\n\n/**\n * Trigger event at element(s)\n *\n * @param {String} type Type of the event\n * @param {Object} data Data to be sent with the event (`params.detail` will be set to this).\n * @param {Object} [params] Event parameters (optional)\n * @param {Boolean} params.bubbles=true Does the event bubble up through the DOM or not.\n * @param {Boolean} params.cancelable=true Is the event cancelable or not.\n * @param {Mixed} params.detail=undefined Additional information about the event.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').trigger('anyEventType');\n */\n\nexport const trigger = function(type, data, {bubbles = true, cancelable = true, preventDefault = false} = {}) {\n\n  const EventConstructor = getEventConstructor(type);\n  const event = new EventConstructor(type, {\n    bubbles,\n    cancelable,\n    preventDefault,\n    detail: data\n  });\n\n  event._preventDefault = preventDefault;\n\n  return each(this, element => {\n    if(!bubbles || isEventBubblingInDetachedTree || isAttachedToDocument(element)) {\n      dispatchEvent(element, event);\n    } else {\n      triggerForPath(element, type, {\n        bubbles,\n        cancelable,\n        preventDefault,\n        detail: data\n      });\n    }\n  });\n};\n\nconst getEventConstructor = type => supportsOtherEventConstructors ? (reMouseEvent.test(type) ? MouseEvent : (reKeyEvent.test(type) ? KeyboardEvent : CustomEvent)) : CustomEvent;\n\n/**\n * Trigger event at first element in the collection. Similar to `trigger()`, except:\n *\n * - Event does not bubble\n * - Default event behavior is prevented\n * - Only triggers handler for first matching element\n *\n * @param {String} type Type of the event\n * @param {Object} data Data to be sent with the event\n * @example\n *     $('form').triggerHandler('submit');\n */\n\nexport const triggerHandler = function(type, data) {\n  if(this[0]) {\n    trigger.call(this[0], type, data, {\n      bubbles: false,\n      preventDefault: true\n    });\n  }\n};\n\n/**\n * Check whether the element is attached to or detached from) the document\n *\n * @private\n * @param {Node} element Element to test\n * @return {Boolean}\n */\n\nconst isAttachedToDocument = element => {\n  if(element === window || element === document) {\n    return true;\n  }\n  return contains(element.ownerDocument.documentElement, element);\n};\n\n/**\n * Dispatch the event at the element and its ancestors.\n * Required to support delegated events in browsers that don't bubble events in detached DOM trees.\n *\n * @private\n * @param {Node} element First element to dispatch the event at\n * @param {String} type Type of the event\n * @param {Object} [params] Event parameters (optional)\n * @param {Boolean} params.bubbles=true Does the event bubble up through the DOM or not.\n * Will be set to false (but shouldn't matter since events don't bubble anyway).\n * @param {Boolean} params.cancelable=true Is the event cancelable or not.\n * @param {Mixed} params.detail=undefined Additional information about the event.\n */\n\nconst triggerForPath = (element, type, params = {}) => {\n  params.bubbles = false;\n  const event = new CustomEvent(type, params);\n  event._target = element;\n  do {\n    dispatchEvent(element, event);\n  } while(element = element.parentNode);\n};\n\n/**\n * Dispatch event to element, but call direct event methods instead if available\n * (e.g. \"blur()\", \"submit()\") and if the event is non-cancelable.\n *\n * @private\n * @param {Node} element Element to dispatch the event at\n * @param {Object} event Event to dispatch\n */\n\nconst directEventMethods = ['blur', 'focus', 'select', 'submit'];\n\nconst dispatchEvent = (element, event) => {\n  if(directEventMethods.indexOf(event.type) !== -1 && typeof element[event.type] === 'function' && !event._preventDefault && !event.cancelable) {\n    element[event.type]();\n  } else {\n    element.dispatchEvent(event);\n  }\n};\n\n/**\n * Polyfill for CustomEvent, borrowed from [MDN](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent#Polyfill).\n * Needed to support IE (9, 10, 11) & PhantomJS\n */\n\n(() => {\n  const CustomEvent = (event, params = {\n    bubbles: false,\n    cancelable: false,\n    detail: undefined\n  }) => {\n    let customEvent = document.createEvent('CustomEvent');\n    customEvent.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n    return customEvent;\n  };\n\n  CustomEvent.prototype = global.CustomEvent && global.CustomEvent.prototype;\n  global.CustomEvent = CustomEvent;\n\n})();\n\n/*\n * Are events bubbling in detached DOM trees?\n * @private\n */\n\nconst isEventBubblingInDetachedTree = (() =>{\n  let isBubbling = false;\n  const doc = global.document;\n  if(doc) {\n    const parent = doc.createElement('div');\n    const child = parent.cloneNode();\n    parent.appendChild(child);\n    parent.addEventListener('e', function() {\n      isBubbling = true;\n    });\n    child.dispatchEvent(new CustomEvent('e', {bubbles: true}));\n  }\n  return isBubbling;\n})();\n\nconst supportsOtherEventConstructors = (() => {\n  try {\n    new window.MouseEvent('click');\n  } catch(e) {\n    return false;\n  }\n  return true;\n})();\n","/**\n * @module Ready\n */\n\n/**\n * Execute callback when `DOMContentLoaded` fires for `document`, or immediately if called afterwards.\n *\n * @param handler Callback to execute when initial DOM content is loaded.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $(document).ready(callback);\n */\n\nexport const ready = function(handler) {\n  if(/complete|loaded|interactive/.test(document.readyState) && document.body) {\n    handler();\n  } else {\n    document.addEventListener('DOMContentLoaded', handler, false);\n  }\n  return this;\n};\n","/**\n * @module noConflict\n */\n\nimport { global } from './util';\n\n/*\n * Save the previous value of the global `$` variable, so that it can be restored later on.\n * @private\n */\n\nconst previousLib = global.$;\n\n/**\n * In case another library sets the global `$` variable before DOMtastic does,\n * this method can be used to return the global `$` to that other library.\n *\n * @return {Object} Reference to DOMtastic.\n * @example\n *     var domtastic = $.noConflict();\n */\n\nexport const noConflict = function() {\n  global.$ = previousLib;\n  return this;\n};\n","/**\n * @module Selector (extra)\n */\n\nimport { each, toArray } from '../util';\nimport { $, matches } from './index';\n\n/**\n * Return children of each element in the collection, optionally filtered by a selector.\n *\n * @param {String} [selector] Filter\n * @return {Object} New wrapped collection\n * @chainable\n * @example\n *     $('.selector').children();\n *     $('.selector').children('.filter');\n */\n\nexport const children = function(selector) {\n  const nodes = [];\n  each(this, element => {\n    if(element.children) {\n      each(element.children, child => {\n        if(!selector || (selector && matches(child, selector))) {\n          nodes.push(child);\n        }\n      });\n    }\n  });\n  return $(nodes);\n};\n\n/**\n * Return child nodes of each element in the collection, including text and comment nodes.\n *\n * @return {Object} New wrapped collection\n * @example\n *     $('.selector').contents();\n */\n\nexport const contents = function() {\n  const nodes = [];\n  each(this, element => nodes.push.apply(nodes, toArray(element.childNodes)));\n  return $(nodes);\n};\n\n/**\n * Return a collection containing only the one at the specified index.\n *\n * @param {Number} index\n * @return {Object} New wrapped collection\n * @chainable\n * @example\n *     $('.items').eq(1)\n *     // The second item; result is the same as doing $($('.items')[1]);\n */\n\nexport const eq = function(index) {\n  return slice.call(this, index, index + 1);\n};\n\n/**\n * Return the DOM element at the specified index.\n *\n * @param {Number} index\n * @return {Node} Element at the specified index\n * @example\n *     $('.items').get(1)\n *     // The second element; result is the same as doing $('.items')[1];\n */\n\nexport const get = function(index) {\n  return this[index];\n};\n\n/**\n * Return the parent elements of each element in the collection, optionally filtered by a selector.\n *\n * @param {String} [selector] Filter\n * @return {Object} New wrapped collection\n * @chainable\n * @example\n *     $('.selector').parent();\n *     $('.selector').parent('.filter');\n */\n\nexport const parent = function(selector) {\n  const nodes = [];\n  each(this, element => {\n    if(!selector || (selector && matches(element.parentNode, selector))) {\n      nodes.push(element.parentNode);\n    }\n  });\n  return $(nodes);\n};\n\n/**\n * Return the sibling elements of each element in the collection, optionally filtered by a selector.\n *\n * @param {String} [selector] Filter\n * @return {Object} New wrapped collection\n * @chainable\n * @example\n *     $('.selector').siblings();\n *     $('.selector').siblings('.filter');\n */\n\nexport const siblings = function(selector) {\n  const nodes = [];\n  each(this, element => each(element.parentNode.children, sibling => {\n    if(sibling !== element && (!selector || (selector && matches(sibling, selector)))) {\n      nodes.push(sibling);\n    }\n  }));\n  return $(nodes);\n};\n\n/**\n * Create a new, sliced collection.\n *\n * @param {Number} start\n * @param {Number} end\n * @return {Object} New wrapped collection\n * @example\n *     $('.items').slice(1, 3)\n *     // New wrapped collection containing the second, third, and fourth element.\n */\n\nexport const slice = function(start, end) {\n  return $([].slice.apply(this, arguments));\n};\n","/**\n * @module Type\n */\n\n/*\n * Determine if the argument passed is a Javascript function object.\n *\n * @param {Object} [obj] Object to test whether or not it is a function.\n * @return {boolean}\n * @example\n *     $.isFunction(function(){});\n *     // true\n * @example\n *     $.isFunction({});\n *     // false\n */\n\nexport const isFunction = obj => typeof obj === 'function';\n\n/*\n * Determine whether the argument is an array.\n *\n * @param {Object} [obj] Object to test whether or not it is an array.\n * @return {boolean}\n * @example\n *     $.isArray([]);\n *     // true\n * @example\n *     $.isArray({});\n *     // false\n */\n\nexport const isArray = Array.isArray;\n","/**\n * @module API\n */\n\nimport { extend } from './util';\n\nconst api = {};\nlet $ = {};\n\n// Import modules to build up the API\n\nimport * as array from './array';\nimport BaseClass from './baseClass';\nimport * as css from './css';\nimport * as dom from './dom/index';\nimport * as dom_attr from './dom/attr';\nimport * as dom_class from './dom/class';\nimport * as dom_contains from './dom/contains';\nimport * as dom_data from './dom/data';\nimport * as dom_extra from './dom/extra';\nimport * as dom_html from './dom/html';\nimport * as event from './event/index';\nimport * as event_trigger from './event/trigger';\nimport * as event_ready from './event/ready';\nimport * as noconflict from './noconflict';\nimport * as selector from './selector/index';\nimport * as selector_closest from './selector/closest';\nimport * as selector_extra from './selector/extra';\nimport * as type from './type';\n\nif(typeof selector !== 'undefined') {\n  $ = selector.$;\n  $.matches = selector.matches;\n  api.find = selector.find;\n}\n\nextend($, dom_contains, noconflict, type);\nextend(api, array, css, dom_attr, dom, dom_class, dom_data, dom_extra, dom_html, event, event_trigger, event_ready, selector_closest, selector_extra);\n\n$.fn = api;\n\n// Version\n\n$.version = '__VERSION__';\n\n// Util\n\n$.extend = extend;\n\n// Provide base class to extend from\n\nif(typeof BaseClass !== 'undefined') {\n  $.BaseClass = BaseClass($.fn);\n}\n\n// Export interface\n\nexport default $;\n"],"names":["global","Function","toArray","length","collection","result","Array","i","each","callback","thisArg","undefined","nodeType","call","extend","target","sources","forEach","prop","src","uniq","filter","item","index","indexOf","isPrototypeSet","reFragment","reSingleTag","reSimpleSelector","$","selector","context","document","querySelectorAll","Wrapper","window","test","createFragment","querySelector","wrap","find","nodes","node","child","push","matches","Element","prototype","_matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","element","isSimpleSelector","getElementById","slice","getElementsByClassName","getElementsByTagName","html","createElement","RegExp","$1","elements","container","children","childNodes","innerHTML","l","fn","constructor","ArrayProto","every","_each","map","pop","reduce","reduceRight","reverse","shift","some","unshift","api","BaseClass","arguments","isNumeric","isNaN","parseFloat","value","isFinite","camelize","replace","letter","toUpperCase","dasherize","toLowerCase","css","key","styleProps","val","style","removeProperty","append","Node","insertAdjacentHTML","appendChild","NodeList","bind","prepend","insertBefore","firstChild","before","parentNode","after","nextSibling","clone","_clone","cloneNode","el","elm","attr","getAttribute","setAttribute","removeAttr","removeAttribute","addClass","split","removeClass","toggleClass","hasClass","classList","contains","fnName","className","compareDocumentPosition","DOCUMENT_POSITION_DISCONNECTED","DATAKEYPROP","data","appendTo","empty","remove","removeChild","replaceWith","apply","text","textContent","fragment","closest","parentElement","n","on","eventNames","handler","useCapture","once","parts","namespace","eventListener","eventName","proxyHandler","delegateHandler","listener","event","addEventListener","off","handlers","getHandlers","removeEventListener","splice","one","eventKeyProp","id","unusedKeys","clearHandlers","augmentEvent","eventMethods","returnTrue","returnFalse","isDefaultPrevented","stopImmediatePropagation","stopPropagation","methodName","testMethodName","originalMethod","_preventDefault","preventDefault","eventTarget","_target","currentTarget","isPropagationStopped","unbind","reMouseEvent","reKeyEvent","trigger","type","bubbles","cancelable","EventConstructor","getEventConstructor","isEventBubblingInDetachedTree","isAttachedToDocument","supportsOtherEventConstructors","MouseEvent","KeyboardEvent","CustomEvent","triggerHandler","ownerDocument","documentElement","triggerForPath","params","directEventMethods","dispatchEvent","customEvent","createEvent","initCustomEvent","detail","isBubbling","doc","parent","e","ready","readyState","body","previousLib","noConflict","contents","eq","get","siblings","sibling","start","end","isFunction","obj","isArray","dom_contains","noconflict","array","dom_attr","dom","dom_class","dom_data","dom_extra","dom_html","event_trigger","event_ready","selector_closest","selector_extra","version"],"mappings":";;;;;;AAAA;;;;;;;;;AASA,AAAO,IAAMA,SAAS,IAAIC,QAAJ,CAAa,aAAb,GAAf;;;;;;;;;;AAUP,AAAO,IAAMC,UAAU,sBAAc;MAC7BC,SAASC,WAAWD,MAA1B;MACME,SAAS,IAAIC,KAAJ,CAAUH,MAAV,CAAf;OACI,IAAII,IAAI,CAAZ,EAAeA,IAAIJ,MAAnB,EAA2BI,GAA3B,EAAgC;WACvBA,CAAP,IAAYH,WAAWG,CAAX,CAAZ;;SAEKF,MAAP;CANK;;;;;;;;;;;AAkBP,AAAO,IAAMG,OAAO,UAACJ,UAAD,EAAaK,QAAb,EAAuBC,OAAvB,EAAmC;MAC/CP,SAASC,WAAWD,MAA1B;MACGA,WAAWQ,SAAX,IAAwBP,WAAWQ,QAAX,KAAwBD,SAAnD,EAA8D;SACxD,IAAIJ,IAAI,CAAZ,EAAeA,IAAIJ,MAAnB,EAA2BI,GAA3B,EAAgC;eACrBM,IAAT,CAAcH,OAAd,EAAuBN,WAAWG,CAAX,CAAvB,EAAsCA,CAAtC,EAAyCH,UAAzC;;GAFJ,MAIO;aACIS,IAAT,CAAcH,OAAd,EAAuBN,UAAvB,EAAmC,CAAnC,EAAsCA,UAAtC;;SAEKA,UAAP;CATK;;;;;;;;;;;;;;;;;AA2BP,AAAO,IAAMU,SAAS,UAACC,MAAD,EAAwB;oCAAZC,OAAY;WAAA;;;UACpCC,OAAR,CAAgB,eAAO;SACjB,IAAIC,IAAR,IAAgBC,GAAhB,EAAqB;aACZD,IAAP,IAAeC,IAAID,IAAJ,CAAf;;GAFJ;SAKOH,MAAP;CANK;;;;;;;;;;AAiBP,AAAO,IAAMK,OAAO;SAAchB,WAAWiB,MAAX,CAAkB,UAACC,IAAD,EAAOC,KAAP;WAAiBnB,WAAWoB,OAAX,CAAmBF,IAAnB,MAA6BC,KAA9C;GAAlB,CAAd;CAAb;;ACjFP;;;;AAIA,AAEA,IAAIE,iBAAiB,KAArB;;AAEA,IAAMC,aAAa,oBAAnB;AACA,IAAMC,cAAc,4BAApB;AACA,IAAMC,mBAAmB,gBAAzB;;;;;;;;;;;;;;;;;;;AAmBA,AAAO,IAAMC,MAAI,UAACC,QAAD,EAAkC;MAAvBC,OAAuB,uEAAbC,QAAa;;;MAE7C5B,mBAAJ;;MAEG,CAAC0B,QAAJ,EAAc;;iBAECE,SAASC,gBAAT,CAA0B,IAA1B,CAAb;GAFF,MAIO,IAAGH,oBAAoBI,OAAvB,EAAgC;;WAE9BJ,QAAP;GAFK,MAIA,IAAG,OAAOA,QAAP,KAAoB,QAAvB,EAAiC;;iBAEzBA,SAASlB,QAAT,IAAqBkB,aAAaK,MAAlC,GAA2C,CAACL,QAAD,CAA3C,GAAwDA,QAArE;GAFK,MAIA,IAAGJ,WAAWU,IAAX,CAAgBN,QAAhB,CAAH,EAA8B;;iBAEtBO,eAAeP,QAAf,CAAb;GAFK,MAIA;;cAEK,OAAOC,OAAP,KAAmB,QAAnB,GAA8BC,SAASM,aAAT,CAAuBP,OAAvB,CAA9B,GAAgEA,QAAQ5B,MAAR,GAAiB4B,QAAQ,CAAR,CAAjB,GAA8BA,OAAxG;;iBAEaO,cAAcR,QAAd,EAAwBC,OAAxB,CAAb;;;SAIKQ,KAAKnC,UAAL,CAAP;CA5BK;;;;;;;;;;;AAyCP,AAAO,IAAMoC,OAAO,UAASV,QAAT,EAAmB;MAC/BW,QAAQ,EAAd;OACK,IAAL,EAAW;WAAQjC,KAAK8B,cAAcR,QAAd,EAAwBY,IAAxB,CAAL,EAAoC,iBAAS;UAC3DD,MAAMjB,OAAN,CAAcmB,KAAd,MAAyB,CAAC,CAA7B,EAAgC;cACxBC,IAAN,CAAWD,KAAX;;KAFe,CAAR;GAAX;SAKOd,IAAEY,KAAF,CAAP;CAPK;;;;;;;;;;;;;AAqBP,AAAO,IAAMI,UAAW,YAAM;MACtBd,UAAU,OAAOe,OAAP,KAAmB,WAAnB,GAAiCA,QAAQC,SAAzC,GAAqD/C,MAArE;MACMgD,WAAWjB,QAAQc,OAAR,IAAmBd,QAAQkB,eAA3B,IAA8ClB,QAAQmB,kBAAtD,IAA4EnB,QAAQoB,iBAApF,IAAyGpB,QAAQqB,gBAAjH,IAAqIrB,QAAQsB,qBAA9J;SACO,UAACC,OAAD,EAAUxB,QAAV;WAAuBkB,SAASnC,IAAT,CAAcyC,OAAd,EAAuBxB,QAAvB,CAAvB;GAAP;CAHqB,EAAhB;;;;;;;;;;;AAeP,IAAMQ,gBAAgB,UAACR,QAAD,EAAWC,OAAX,EAAuB;;MAErCwB,mBAAmB3B,iBAAiBQ,IAAjB,CAAsBN,QAAtB,CAAzB;;MAEGyB,gBAAH,EAAqB;QAChBzB,SAAS,CAAT,MAAgB,GAAnB,EAAwB;UAChBwB,UAAU,CAACvB,QAAQyB,cAAR,GAAyBzB,OAAzB,GAAmCC,QAApC,EAA8CwB,cAA9C,CAA6D1B,SAAS2B,KAAT,CAAe,CAAf,CAA7D,CAAhB;aACOH,UAAU,CAACA,OAAD,CAAV,GAAsB,EAA7B;;QAECxB,SAAS,CAAT,MAAgB,GAAnB,EAAwB;aACfC,QAAQ2B,sBAAR,CAA+B5B,SAAS2B,KAAT,CAAe,CAAf,CAA/B,CAAP;;WAEK1B,QAAQ4B,oBAAR,CAA6B7B,QAA7B,CAAP;;;SAGKC,QAAQE,gBAAR,CAAyBH,QAAzB,CAAP;CAfF;;;;;;;;;;AA2BA,IAAMO,iBAAiB,gBAAQ;;MAE1BV,YAAYS,IAAZ,CAAiBwB,IAAjB,CAAH,EAA2B;WAClB,CAAC5B,SAAS6B,aAAT,CAAuBC,OAAOC,EAA9B,CAAD,CAAP;;;MAGIC,WAAW,EAAjB;MACMC,YAAYjC,SAAS6B,aAAT,CAAuB,KAAvB,CAAlB;MACMK,WAAWD,UAAUE,UAA3B;;YAEUC,SAAV,GAAsBR,IAAtB;;OAEI,IAAIrD,IAAI,CAAR,EAAW8D,IAAIH,SAAS/D,MAA5B,EAAoCI,IAAI8D,CAAxC,EAA2C9D,GAA3C,EAAgD;aACrCqC,IAAT,CAAcsB,SAAS3D,CAAT,CAAd;;;SAGKyD,QAAP;CAhBF;;;;;;;;;;AA2BA,IAAMzB,OAAO,sBAAc;;MAEtB,CAACd,cAAJ,EAAoB;YACVsB,SAAR,GAAoBlB,IAAEyC,EAAtB;YACQvB,SAAR,CAAkBwB,WAAlB,GAAgCrC,OAAhC;qBACiB,IAAjB;;;SAGK,IAAIA,OAAJ,CAAY9B,UAAZ,CAAP;CARF;;;;;;;;;;AAmBA,AAAO,IAAM8B,UAAU,UAAS9B,UAAT,EAAqB;MACtCG,IAAI,CAAR;MACMJ,SAASC,WAAWD,MAA1B;SACMI,IAAIJ,MAAV,GAAmB;SACZI,CAAL,IAAUH,WAAWG,GAAX,CAAV;;OAEGJ,MAAL,GAAcA,MAAd;CANK;;;;;;;;;ACnLP;;;;AAIA,AACA,AAEA,IAAMqE,aAAalE,MAAMyC,SAAzB;;;;;;;;;;;;;;;AAeA,AAAO,IAAM0B,QAAQD,WAAWC,KAAzB;;;;;;;;;;;;;;;;;AAiBP,AAAO,IAAMpD,SAAS,UAASS,QAAT,EAAmBpB,OAAnB,EAA4B;MAC1CD,WAAW,OAAOqB,QAAP,KAAoB,UAApB,GAAiCA,QAAjC,GAA4C;WAAWe,QAAQS,OAAR,EAAiBxB,QAAjB,CAAX;GAA7D;SACOD,IAAE2C,WAAWnD,MAAX,CAAkBR,IAAlB,CAAuB,IAAvB,EAA6BJ,QAA7B,EAAuCC,OAAvC,CAAF,CAAP;CAFK;;;;;;;;;;;;;;;AAkBP,AAAO,IAAMO,UAAU,UAASR,QAAT,EAAmBC,OAAnB,EAA4B;SAC1CgE,KAAM,IAAN,EAAYjE,QAAZ,EAAsBC,OAAtB,CAAP;CADK;;AAIP,AAAO,IAAMF,SAAOS,OAAb;;;;;;;;;;;;AAYP,AAAO,IAAMO,UAAUgD,WAAWhD,OAA3B;;;;;;;;;;;;;;;AAeP,AAAO,IAAMmD,MAAMH,WAAWG,GAAvB;;;;;;;;;;AAUP,AAAO,IAAMC,MAAMJ,WAAWI,GAAvB;;;;;;;;;;;AAWP,AAAO,IAAMhC,OAAO4B,WAAW5B,IAAxB;;;;;;;;;;;;;;;AAeP,AAAO,IAAMiC,SAASL,WAAWK,MAA1B;;;;;;;;;;;;;;;AAeP,AAAO,IAAMC,cAAcN,WAAWM,WAA/B;;;;;;;;;;;AAWP,AAAO,IAAMC,UAAU,YAAW;SACzBlD,IAAE3B,QAAQ,IAAR,EAAc6E,OAAd,EAAF,CAAP;CADK;;;;;;;;;;AAYP,AAAO,IAAMC,QAAQR,WAAWQ,KAAzB;;;;;;;;;;;;;;AAcP,AAAO,IAAMC,OAAOT,WAAWS,IAAxB;;;;;;;;;;;AAWP,AAAO,IAAMC,UAAUV,WAAWU,OAA3B;;;;;;;;;;;;;;;;;;;;;;;;;ACvLP,AACA,AAEA,gBAAe,UAASC,GAAT,EAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAgCrBC,SAhCqB,GAiCzB,qBAAc;;;YACJvE,IAAR,CAAa,IAAb,EAAmBiB,qBAAYuD,SAAZ,CAAnB;GAlCuB;;SAqCpBD,UAAUrC,SAAjB,EAA4BoC,GAA5B;SACOC,SAAP;;;AC7CF;;;;AAIA,AAEA,IAAME,YAAY;SAAS,CAACC,MAAMC,WAAWC,KAAX,CAAN,CAAD,IAA6BC,SAASD,KAAT,CAAtC;CAAlB;;AAEA,IAAME,WAAW;SAASF,MAAMG,OAAN,CAAc,cAAd,EAA8B,UAAC/C,OAAD,EAAUgD,MAAV;WAAqBA,OAAOC,WAAP,EAArB;GAA9B,CAAT;CAAjB;;AAEA,IAAMC,YAAY;SAASN,MAAMG,OAAN,CAAc,mBAAd,EAAmC,OAAnC,EAA4CI,WAA5C,EAAT;CAAlB;;;;;;;;;;;;;;;AAeA,AAAO,IAAMC,MAAM,UAASC,GAAT,EAAcT,KAAd,EAAqB;;MAElCU,mBAAJ;MAAgBjF,aAAhB;MAAsBkF,YAAtB;;MAEG,OAAOF,GAAP,KAAe,QAAlB,EAA4B;UACpBP,SAASO,GAAT,CAAN;;QAEG,OAAOT,KAAP,KAAiB,WAApB,EAAiC;UAC3BnC,UAAU,KAAK1C,QAAL,GAAgB,IAAhB,GAAuB,KAAK,CAAL,CAArC;UACG0C,OAAH,EAAY;cACJA,QAAQ+C,KAAR,CAAcH,GAAd,CAAN;eACOZ,UAAUc,GAAV,IAAiBZ,WAAWY,GAAX,CAAjB,GAAmCA,GAA1C;;aAEKzF,SAAP;;;iBAGW,EAAb;eACWuF,GAAX,IAAkBT,KAAlB;GAbF,MAcO;iBACQS,GAAb;SACIhF,IAAJ,IAAYiF,UAAZ,EAAwB;YAChBA,WAAWjF,IAAX,CAAN;aACOiF,WAAWjF,IAAX,CAAP;iBACWyE,SAASzE,IAAT,CAAX,IAA6BkF,GAA7B;;;;OAIC,IAAL,EAAW,mBAAW;SAChBlF,IAAJ,IAAYiF,UAAZ,EAAwB;UACnBA,WAAWjF,IAAX,KAAoBiF,WAAWjF,IAAX,MAAqB,CAA5C,EAA+C;gBACrCmF,KAAR,CAAcnF,IAAd,IAAsBiF,WAAWjF,IAAX,CAAtB;OADF,MAEO;gBACGmF,KAAR,CAAcC,cAAd,CAA6BP,UAAU7E,IAAV,CAA7B;;;GALN;;SAUO,IAAP;CArCK;;;;;;ACzBP;;;;AAIA,AACA,AAEA,IAAMD,YAAUX,MAAMyC,SAAN,CAAgB9B,OAAhC;;;;;;;;;;;;;AAaA,AAAO,IAAMsF,SAAS,UAASjD,OAAT,EAAkB;MACnC,gBAAgBkD,IAAnB,EAAyB;QACpB,OAAOlD,OAAP,KAAmB,QAAtB,EAAgC;WACzBmD,kBAAL,CAAwB,WAAxB,EAAqCnD,OAArC;KADF,MAEO;UACFA,mBAAmBkD,IAAtB,EAA4B;aACrBE,WAAL,CAAiBpD,OAAjB;OADF,MAEO;YACCU,WAAWV,mBAAmBqD,QAAnB,GAA8BzG,QAAQoD,OAAR,CAA9B,GAAiDA,OAAlE;kBACQzC,IAAR,CAAamD,QAAb,EAAuB,KAAK0C,WAAL,CAAiBE,IAAjB,CAAsB,IAAtB,CAAvB;;;GARN,MAWO;UACC,IAAN,EAAYL,MAAZ,EAAoBjD,OAApB;;SAEK,IAAP;CAfK;;;;;;;;;;;;;AA6BP,AAAO,IAAMuD,UAAU,UAASvD,OAAT,EAAkB;MACpC,gBAAgBkD,IAAnB,EAAyB;QACpB,OAAOlD,OAAP,KAAmB,QAAtB,EAAgC;WACzBmD,kBAAL,CAAwB,YAAxB,EAAsCnD,OAAtC;KADF,MAEO;UACFA,mBAAmBkD,IAAtB,EAA4B;aACrBM,YAAL,CAAkBxD,OAAlB,EAA2B,KAAKyD,UAAhC;OADF,MAEO;YACD/C,WAAWV,mBAAmBqD,QAAnB,GAA8BzG,QAAQoD,OAAR,CAA9B,GAAiDA,OAAhE;kBACQzC,IAAR,CAAamD,SAASe,OAAT,EAAb,EAAiC8B,QAAQD,IAAR,CAAa,IAAb,CAAjC;;;GARN,MAWO;UACC,IAAN,EAAYC,OAAZ,EAAqBvD,OAArB;;SAEK,IAAP;CAfK;;;;;;;;;;;;;AA6BP,AAAO,IAAM0D,SAAS,UAAS1D,OAAT,EAAkB;MACnC,gBAAgBkD,IAAnB,EAAyB;QACpB,OAAOlD,OAAP,KAAmB,QAAtB,EAAgC;WACzBmD,kBAAL,CAAwB,aAAxB,EAAuCnD,OAAvC;KADF,MAEO;UACFA,mBAAmBkD,IAAtB,EAA4B;aACrBS,UAAL,CAAgBH,YAAhB,CAA6BxD,OAA7B,EAAsC,IAAtC;OADF,MAEO;YACCU,WAAWV,mBAAmBqD,QAAnB,GAA8BzG,QAAQoD,OAAR,CAA9B,GAAiDA,OAAlE;kBACQzC,IAAR,CAAamD,QAAb,EAAuBgD,OAAOJ,IAAP,CAAY,IAAZ,CAAvB;;;GARN,MAWO;UACC,IAAN,EAAYI,MAAZ,EAAoB1D,OAApB;;SAEK,IAAP;CAfK;;;;;;;;;;;;AA4BP,AAAO,IAAM4D,QAAQ,UAAS5D,OAAT,EAAkB;MAClC,gBAAgBkD,IAAnB,EAAyB;QACpB,OAAOlD,OAAP,KAAmB,QAAtB,EAAgC;WACzBmD,kBAAL,CAAwB,UAAxB,EAAoCnD,OAApC;KADF,MAEO;UACFA,mBAAmBkD,IAAtB,EAA4B;aACrBS,UAAL,CAAgBH,YAAhB,CAA6BxD,OAA7B,EAAsC,KAAK6D,WAA3C;OADF,MAEO;YACCnD,WAAWV,mBAAmBqD,QAAnB,GAA8BzG,QAAQoD,OAAR,CAA9B,GAAiDA,OAAlE;kBACQzC,IAAR,CAAamD,SAASe,OAAT,EAAb,EAAiCmC,MAAMN,IAAN,CAAW,IAAX,CAAjC;;;GARN,MAWO;UACC,IAAN,EAAYM,KAAZ,EAAmB5D,OAAnB;;SAEK,IAAP;CAfK;;;;;;;;;;AA0BP,AAAO,IAAM8D,QAAQ,YAAW;SACvBvF,IAAEwF,OAAO,IAAP,CAAF,CAAP;CADK;;;;;;;;;;AAYP,AAAO,IAAMA,SAAS,mBAAW;MAC5B,OAAO/D,OAAP,KAAmB,QAAtB,EAAgC;WACvBA,OAAP;GADF,MAEO,IAAGA,mBAAmBkD,IAAtB,EAA4B;WAC1BlD,QAAQgE,SAAR,CAAkB,IAAlB,CAAP;GADK,MAEA,IAAG,YAAYhE,OAAf,EAAwB;WACtB,GAAGqB,GAAH,CAAO9D,IAAP,CAAYyC,OAAZ,EAAqB;aAAMiE,GAAGD,SAAH,CAAa,IAAb,CAAN;KAArB,CAAP;;SAEKhE,OAAP;CARK;;;;;;;;;;;AAoBP,AAAO,IAAMoB,QAAQ,UAACtE,UAAD,EAAakE,EAAb,EAAiBhB,OAAjB,EAA6B;MAC5Ce,IAAIjE,WAAWD,MAAnB;SACMkE,GAAN,EAAW;QACHmD,MAAMnD,MAAM,CAAN,GAAUf,OAAV,GAAoB+D,OAAO/D,OAAP,CAAhC;OACGzC,IAAH,CAAQT,WAAWiE,CAAX,CAAR,EAAuBmD,GAAvB;;CAJG;;;;;;;;;;;;ACpKP;;;;AAIA,AAEA;;;;;;;;;;;;;AAaA,AAAO,IAAMC,OAAO,UAASvB,GAAT,EAAcT,KAAd,EAAqB;;MAEpC,OAAOS,GAAP,KAAe,QAAf,IAA2B,OAAOT,KAAP,KAAiB,WAA/C,EAA4D;QACpDnC,UAAU,KAAK1C,QAAL,GAAgB,IAAhB,GAAuB,KAAK,CAAL,CAAvC;WACO0C,UAAUA,QAAQoE,YAAR,CAAqBxB,GAArB,CAAV,GAAsCvF,SAA7C;;;SAGKH,KAAK,IAAL,EAAW,mBAAW;QACxB,OAAO0F,GAAP,KAAe,QAAlB,EAA4B;WACtB,IAAIuB,KAAR,IAAgBvB,GAAhB,EAAqB;gBACXyB,YAAR,CAAqBF,KAArB,EAA2BvB,IAAIuB,KAAJ,CAA3B;;KAFJ,MAIO;cACGE,YAAR,CAAqBzB,GAArB,EAA0BT,KAA1B;;GANG,CAAP;CAPK;;;;;;;;;;;;AA4BP,AAAO,IAAMmC,aAAa,UAAS1B,GAAT,EAAc;SAC/B1F,KAAK,IAAL,EAAW;WAAW8C,QAAQuE,eAAR,CAAwB3B,GAAxB,CAAX;GAAX,CAAP;CADK;;;;;;;AC/CP;;;;AAIA,AAEA;;;;;;;;;;;AAWA,AAAO,IAAM4B,WAAW,UAASrC,KAAT,EAAgB;MACnCA,SAASA,MAAMtF,MAAlB,EAA0B;SACnBsF,MAAMsC,KAAN,CAAY,GAAZ,CAAL,EAAuBrD,QAAMkC,IAAN,CAAW,IAAX,EAAiB,KAAjB,CAAvB;;SAEK,IAAP;CAJK;;;;;;;;;;;;;AAkBP,AAAO,IAAMoB,cAAc,UAASvC,KAAT,EAAgB;MACtCA,SAASA,MAAMtF,MAAlB,EAA0B;SACnBsF,MAAMsC,KAAN,CAAY,GAAZ,CAAL,EAAuBrD,QAAMkC,IAAN,CAAW,IAAX,EAAiB,QAAjB,CAAvB;;SAEK,IAAP;CAJK;;;;;;;;;;;;;AAkBP,AAAO,IAAMqB,cAAc,UAASxC,KAAT,EAAgB;MACtCA,SAASA,MAAMtF,MAAlB,EAA0B;SACnBsF,MAAMsC,KAAN,CAAY,GAAZ,CAAL,EAAuBrD,QAAMkC,IAAN,CAAW,IAAX,EAAiB,QAAjB,CAAvB;;SAEK,IAAP;CAJK;;;;;;;;;;;;AAiBP,AAAO,IAAMsB,WAAW,UAASzC,KAAT,EAAgB;SAC/B,CAAC,KAAK7E,QAAL,GAAgB,CAAC,IAAD,CAAhB,GAAyB,IAA1B,EAAgCqE,IAAhC,CAAqC;WAAW3B,QAAQ6E,SAAR,CAAkBC,QAAlB,CAA2B3C,KAA3B,CAAX;GAArC,CAAP;CADK;;;;;;;;;;AAYP,IAAMf,UAAQ,UAAS2D,MAAT,EAAiBC,SAAjB,EAA4B;SACjC9H,KAAK,IAAL,EAAW;WAAW8C,QAAQ6E,SAAR,CAAkBE,MAAlB,EAA0BC,SAA1B,CAAX;GAAX,CAAP;CADF;;;;;;;;;AClFA;;;;;;;;;;;;;;;AAeA,AAAO,IAAMF,WAAW,UAACnE,SAAD,EAAYX,OAAZ,EAAwB;MAC3C,CAACW,SAAD,IAAc,CAACX,OAAf,IAA0BW,cAAcX,OAA3C,EAAoD;WAC3C,KAAP;GADF,MAEO,IAAGW,UAAUmE,QAAb,EAAuB;WACrBnE,UAAUmE,QAAV,CAAmB9E,OAAnB,CAAP;GADK,MAEA,IAAGW,UAAUsE,uBAAb,EAAsC;WACpC,EAAEtE,UAAUsE,uBAAV,CAAkCjF,OAAlC,IAA6CkD,KAAKgC,8BAApD,CAAP;;SAEK,KAAP;CARK;;;;;;ACfP;;;;AAIA,AAEA,IAAMC,cAAc,oBAApB;;;;;;;;;;;;;;AAcA,AAAO,IAAMC,OAAO,UAASxC,GAAT,EAAcT,KAAd,EAAqB;;MAEpC,OAAOS,GAAP,KAAe,QAAf,IAA2B,OAAOT,KAAP,KAAiB,WAA/C,EAA4D;QACpDnC,UAAU,KAAK1C,QAAL,GAAgB,IAAhB,GAAuB,KAAK,CAAL,CAAvC;WACO0C,WAAWA,QAAQmF,WAAR,CAAX,GAAkCnF,QAAQmF,WAAR,EAAqBvC,GAArB,CAAlC,GAA8DvF,SAArE;;;SAGKH,KAAK,IAAL,EAAW,mBAAW;YACnBiI,WAAR,IAAuBnF,QAAQmF,WAAR,KAAwB,EAA/C;YACQA,WAAR,EAAqBvC,GAArB,IAA4BT,KAA5B;GAFK,CAAP;CAPK;;;;;;;;;;;;;;AAyBP,AAAO,IAAMvE,OAAO,UAASgF,GAAT,EAAcT,KAAd,EAAqB;;MAEpC,OAAOS,GAAP,KAAe,QAAf,IAA2B,OAAOT,KAAP,KAAiB,WAA/C,EAA4D;QACpDnC,UAAU,KAAK1C,QAAL,GAAgB,IAAhB,GAAuB,KAAK,CAAL,CAAvC;WACO0C,WAAWA,OAAX,GAAqBA,QAAQ4C,GAAR,CAArB,GAAoCvF,SAA3C;;;SAGKH,KAAK,IAAL,EAAW;WAAW8C,QAAQ4C,GAAR,IAAeT,KAA1B;GAAX,CAAP;CAPK;;;;;;;AC7CP;;;;AAIA,AACA,AACA,AAEA;;;;;;;;;;AAUA,AAAO,IAAMkD,WAAW,UAASrF,OAAT,EAAkB;MAClCvB,UAAU,OAAOuB,OAAP,KAAmB,QAAnB,GAA8BzB,IAAEyB,OAAF,CAA9B,GAA2CA,OAA3D;SACOzC,IAAP,CAAYkB,OAAZ,EAAqB,IAArB;SACO,IAAP;CAHK;;;;;;;;;;;AAeP,AAAO,IAAM6G,QAAQ,YAAW;SACvBpI,KAAK,IAAL,EAAW;WAAW8C,QAAQc,SAAR,GAAoB,EAA/B;GAAX,CAAP;CADK;;;;;;;;;;AAYP,AAAO,IAAMyE,SAAS,YAAW;SACxBrI,KAAK,IAAL,EAAW,mBAAW;QACxB8C,QAAQ2D,UAAX,EAAuB;cACbA,UAAR,CAAmB6B,WAAnB,CAA+BxF,OAA/B;;GAFG,CAAP;CADK;;;;;;;;AAcP,AAAO,IAAMyF,cAAc,YAAW;SAC7B/B,OAAOgC,KAAP,CAAa,IAAb,EAAmB3D,SAAnB,EAA8BwD,MAA9B,EAAP;CADK;;;;;;;;;;;;AAcP,AAAO,IAAMI,OAAO,UAASxD,KAAT,EAAgB;;MAE/BA,UAAU9E,SAAb,EAAwB;WACf,KAAK,CAAL,EAAQuI,WAAf;;;SAGK1I,KAAK,IAAL,EAAW;WAAW8C,QAAQ4F,WAAR,GAAsB,KAAKzD,KAAtC;GAAX,CAAP;CANK;;;;;;;;;;;;AAmBP,AAAO,IAAMW,MAAM,UAASX,KAAT,EAAgB;;MAE9BA,UAAU9E,SAAb,EAAwB;WACf,KAAK,CAAL,EAAQ8E,KAAf;;;SAGKjF,KAAK,IAAL,EAAW;WAAW8C,QAAQmC,KAAR,GAAgBA,KAA3B;GAAX,CAAP;CANK;;;;;;;;;;;AC5FP;;;;AAIA,AAEA;;;;;;;;;;;AAWA,AAAO,IAAM7B,OAAO,UAASuF,QAAT,EAAmB;;MAElC,OAAOA,QAAP,KAAoB,QAAvB,EAAiC;QACzB7F,UAAU,KAAK1C,QAAL,GAAgB,IAAhB,GAAuB,KAAK,CAAL,CAAvC;WACO0C,UAAUA,QAAQc,SAAlB,GAA8BzD,SAArC;;;SAGKH,KAAK,IAAL,EAAW;WAAW8C,QAAQc,SAAR,GAAoB+E,QAA/B;GAAX,CAAP;CAPK;;;;;;ACjBP;;;;AAIA,AACA,AAEA;;;;;;;;;;;AAWA,AAAO,IAAMC,UAAW,YAAM;;MAEtBA,UAAU,UAAStH,QAAT,EAAmBC,OAAnB,EAA4B;QACpCU,QAAQ,EAAd;SACK,IAAL,EAAW,gBAAQ;aACXC,QAAQA,SAASX,OAAvB,EAAgC;YAC3Bc,QAAQH,IAAR,EAAcZ,QAAd,CAAH,EAA4B;gBACpBc,IAAN,CAAWF,IAAX;;;eAGKA,KAAK2G,aAAZ;;KANJ;WASOxH,IAAET,KAAKqB,KAAL,CAAF,CAAP;GAXF;;SAcO,OAAOK,OAAP,KAAmB,WAAnB,IAAkC,CAACA,QAAQC,SAAR,CAAkBqG,OAArD,GAA+DA,OAA/D,GAAyE,UAAStH,QAAT,EAAmBC,OAAnB,EAA4B;;;QACvG,CAACA,OAAJ,EAAa;;YACLU,QAAQ,EAAd;oBACW,gBAAQ;cACX6G,IAAI5G,KAAK0G,OAAL,CAAatH,QAAb,CAAV;cACGwH,CAAH,EAAM;kBACE1G,IAAN,CAAW0G,CAAX;;SAHJ;;aAMOzH,IAAET,KAAKqB,KAAL,CAAF;;;;;KART,MASO;aACE2G,QAAQvI,IAAR,CAAa,IAAb,EAAmBiB,QAAnB,EAA6BC,OAA7B,CAAP;;GAXJ;CAhBqB,EAAhB;;;;;;;;;;;;ACdP,AACA,AAEA;;;;;;;;;;;;;;AAcA,AAAO,IAAMwH,KAAK,UAASC,UAAT,EAAqB1H,QAArB,EAA+B2H,OAA/B,EAAwCC,UAAxC,EAAoDC,IAApD,EAA0D;;;MAEvE,OAAO7H,QAAP,KAAoB,UAAvB,EAAmC;cACvBA,QAAV;eACW,IAAX;;;MAGE8H,cAAJ;MACEC,kBADF;MAEEC,sBAFF;;aAIW/B,KAAX,CAAiB,GAAjB,EAAsB9G,OAAtB,CAA8B,qBAAa;;YAEjC8I,UAAUhC,KAAV,CAAgB,GAAhB,CAAR;gBACY6B,MAAM,CAAN,KAAY,IAAxB;gBACYA,MAAM,CAAN,KAAY,IAAxB;;oBAEgBI,aAAaP,OAAb,CAAhB;;gBAEW,mBAAW;;UAEjB3H,QAAH,EAAa;wBACKmI,gBAAgBrD,IAAhB,CAAqBtD,OAArB,EAA8BxB,QAA9B,EAAwCgI,aAAxC,CAAhB;;;UAGCH,IAAH,EAAS;;cACDO,WAAWJ,aAAjB;0BACgB,iBAAS;gBACnBjJ,IAAJ,CAASyC,OAAT,EAAkBkG,UAAlB,EAA8B1H,QAA9B,EAAwC2H,OAAxC,EAAiDC,UAAjD;qBACS7I,IAAT,CAAcyC,OAAd,EAAuB6G,KAAvB;WAFF;;;;cAMMC,gBAAR,CAAyBL,SAAzB,EAAoCD,aAApC,EAAmDJ,cAAc,KAAjE;;kBAEYpG,OAAZ,EAAqBV,IAArB,CAA0B;4BAAA;wBAAA;oCAAA;0BAAA;;OAA1B;KAhBF;GARF,EAiCG,IAjCH;;SAmCO,IAAP;CA9CK;;;;;;;;;;;;;;;;;AAgEP,AAAO,IAAMyH,MAAM,YAAyD;MAAhDb,UAAgD,uEAAnC,EAAmC;MAA/B1H,QAA+B;;;;MAArB2H,OAAqB;MAAZC,UAAY;;;MAEvE,OAAO5H,QAAP,KAAoB,UAAvB,EAAmC;cACvBA,QAAV;eACW,IAAX;;;MAGE8H,cAAJ;MACEC,kBADF;MAEES,iBAFF;;aAIWvC,KAAX,CAAiB,GAAjB,EAAsB9G,OAAtB,CAA8B,qBAAa;;YAEjC8I,UAAUhC,KAAV,CAAgB,GAAhB,CAAR;gBACY6B,MAAM,CAAN,KAAY,IAAxB;gBACYA,MAAM,CAAN,KAAY,IAAxB;;WAEOpJ,aAAW,mBAAW;;iBAEhB+J,YAAYjH,OAAZ,CAAX;;WAEKgH,SAASjJ,MAAT,CAAgB,gBAAQ;eAE3B,CAAC,CAAC0I,SAAD,IAAczI,KAAKyI,SAAL,KAAmBA,SAAlC,MACC,CAACF,SAAD,IAAcvI,KAAKuI,SAAL,KAAmBA,SADlC,MAEC,CAACJ,OAAD,IAAYnI,KAAKmI,OAAL,KAAiBA,OAF9B,MAGC,CAAC3H,QAAD,IAAaR,KAAKQ,QAAL,KAAkBA,QAHhC,CADA;OADG,CAAL,EAMI,gBAAQ;gBACF0I,mBAAR,CAA4BlJ,KAAKyI,SAAjC,EAA4CzI,KAAKwI,aAAjD,EAAgEJ,cAAc,KAA9E;iBACSe,MAAT,CAAgBH,SAAS9I,OAAT,CAAiBF,IAAjB,CAAhB,EAAwC,CAAxC;OARF;;UAWG,CAACyI,SAAD,IAAc,CAACF,SAAf,IAA4B,CAAC/H,QAA7B,IAAyC,CAAC2H,OAA7C,EAAsD;sBACtCnG,OAAd;OADF,MAEO,IAAGgH,SAASnK,MAAT,KAAoB,CAAvB,EAA0B;sBACjBmD,OAAd;;KAlBG,CAAP;GANF,EA6BG,IA7BH;;SA+BO,IAAP;CA1CK;;;;;;;;;;;;;;;AA0DP,AAAO,IAAMoH,MAAM,UAASlB,UAAT,EAAqB1H,QAArB,EAA+B2H,OAA/B,EAAwCC,UAAxC,EAAoD;SAC9DH,GAAG1I,IAAH,CAAQ,IAAR,EAAc2I,UAAd,EAA0B1H,QAA1B,EAAoC2H,OAApC,EAA6CC,UAA7C,EAAyD,CAAzD,CAAP;CADK;;;;;;;;;;AAYP,IAAMiB,eAAe,qBAArB;AACA,IAAIC,KAAK,CAAT;AACA,IAAIN,WAAW,EAAf;AACA,IAAIO,aAAa,EAAjB;;AAEA,AAAO,IAAMN,cAAc,mBAAW;MACjC,CAACjH,QAAQqH,YAAR,CAAJ,EAA2B;YACjBA,YAAR,IAAwBE,WAAW1K,MAAX,KAAsB,CAAtB,GAA0B,EAAEyK,EAA5B,GAAiCC,WAAWjG,GAAX,EAAzD;;MAEIsB,MAAM5C,QAAQqH,YAAR,CAAZ;SACOL,SAASpE,GAAT,MAAkBoE,SAASpE,GAAT,IAAgB,EAAlC,CAAP;CALK;;;;;;;;;AAeP,AAAO,IAAM4E,gBAAgB,mBAAW;MAChC5E,MAAM5C,QAAQqH,YAAR,CAAZ;MACGL,SAASpE,GAAT,CAAH,EAAkB;aACPA,GAAT,IAAgB,IAAhB;YACQyE,YAAR,IAAwB,IAAxB;eACW/H,IAAX,CAAgBsD,GAAhB;;CALG;;;;;;;;;;;AAkBP,AAAO,IAAM8D,eAAe;SAAW,UAASG,KAAT,EAAgB;WAC9CV,QAAQ5I,IAAR,CAAa,IAAb,EAAmBkK,aAAaZ,KAAb,CAAnB,CAAP;GAD0B;CAArB;;AAIP,IAAMa,eAAe;kBACH,oBADG;4BAEO,+BAFP;mBAGF;CAHnB;AAKA,IAAMC,aAAa;SAAM,IAAN;CAAnB;AACA,IAAMC,cAAc;SAAM,KAAN;CAApB;;;;;;;;;;AAUA,IAAMH,eAAe,iBAAS;MACzB,CAACZ,MAAMgB,kBAAP,IAA6BhB,MAAMiB,wBAAnC,IAA+DjB,MAAMkB,eAAxE,EAAyF;SACnF,IAAMC,UAAV,IAAwBN,YAAxB,EAAsC;iBAC1BM,UAAT,EAAqBC,cAArB,EAAqCC,cAArC,EAAqD;cAC9CF,UAAN,IAAoB,YAAW;eACxBC,cAAL,IAAuBN,UAAvB;iBACOO,kBAAkBA,eAAexC,KAAf,CAAqB,IAArB,EAA2B3D,SAA3B,CAAzB;SAFF;cAIMkG,cAAN,IAAwBL,WAAxB;OALD,EAMCI,UAND,EAMaN,aAAaM,UAAb,CANb,EAMuCnB,MAAMmB,UAAN,CANvC,CAAD;;QAQCnB,MAAMsB,eAAT,EAA0B;YAClBC,cAAN;;;SAGGvB,KAAP;CAfF;;;;;;;;;;;;;AA6BA,AAAO,IAAMF,kBAAkB,UAACnI,QAAD,EAAW2H,OAAX,EAAoBU,KAApB,EAA8B;MACrDwB,cAAcxB,MAAMyB,OAAN,IAAiBzB,MAAMpJ,MAA3C;MACM8K,gBAAgBzC,QAAQvI,IAAR,CAAa,CAAC8K,WAAD,CAAb,EAA4B7J,QAA5B,UAA4C,CAA5C,CAAtB;MACG+J,iBAAiBA,wBAApB,EAA4C;QACvCA,kBAAkBF,WAAlB,IAAiC,EAAExB,MAAM2B,oBAAN,IAA8B3B,MAAM2B,oBAAN,EAAhC,CAApC,EAAmG;cACzFjL,IAAR,CAAagL,aAAb,EAA4B1B,KAA5B;;;CALC;;AAUP,AAAO,IAAMvD,OAAO2C,EAAb;AACP,AAAO,IAAMwC,SAAS1B,GAAf;;;;;;;;;;;;;;AC7PP;;;;AAIA,AACA,AAEA,IAAM2B,eAAe,sCAArB;AACA,IAAMC,aAAa,MAAnB;;;;;;;;;;;;;;;;;AAiBA,AAAO,IAAMC,UAAU,UAASC,IAAT,EAAezD,IAAf,EAAuF;iFAAJ,EAAI;;0BAAjE0D,OAAiE;MAAjEA,OAAiE,gCAAvD,IAAuD;6BAAjDC,UAAiD;MAAjDA,UAAiD,mCAApC,IAAoC;iCAA9BX,cAA8B;MAA9BA,cAA8B,uCAAb,KAAa;;;MAEtGY,mBAAmBC,oBAAoBJ,IAApB,CAAzB;MACMhC,QAAQ,IAAImC,gBAAJ,CAAqBH,IAArB,EAA2B;oBAAA;0BAAA;kCAAA;YAI/BzD;GAJI,CAAd;;QAOM+C,eAAN,GAAwBC,cAAxB;;SAEOlL,KAAK,IAAL,EAAW,mBAAW;QACxB,CAAC4L,OAAD,IAAYI,6BAAZ,IAA6CC,qBAAqBnJ,OAArB,CAAhD,EAA+E;oBAC/DA,OAAd,EAAuB6G,KAAvB;KADF,MAEO;qBACU7G,OAAf,EAAwB6I,IAAxB,EAA8B;wBAAA;8BAAA;sCAAA;gBAIpBzD;OAJV;;GAJG,CAAP;CAZK;;AA0BP,IAAM6D,sBAAsB;SAAQG,iCAAkCV,aAAa5J,IAAb,CAAkB+J,IAAlB,IAA0BQ,UAA1B,GAAwCV,WAAW7J,IAAX,CAAgB+J,IAAhB,IAAwBS,aAAxB,GAAwCC,WAAlH,GAAkIA,WAA1I;CAA5B;;;;;;;;;;;;;;;AAeA,AAAO,IAAMC,iBAAiB,UAASX,IAAT,EAAezD,IAAf,EAAqB;MAC9C,KAAK,CAAL,CAAH,EAAY;YACF7H,IAAR,CAAa,KAAK,CAAL,CAAb,EAAsBsL,IAAtB,EAA4BzD,IAA5B,EAAkC;eACvB,KADuB;sBAEhB;KAFlB;;CAFG;;;;;;;;;;AAiBP,IAAM+D,uBAAuB,mBAAW;MACnCnJ,YAAYnB,MAAZ,IAAsBmB,YAAYtB,QAArC,EAA+C;WACtC,IAAP;;SAEKoG,SAAS9E,QAAQyJ,aAAR,CAAsBC,eAA/B,EAAgD1J,OAAhD,CAAP;CAJF;;;;;;;;;;;;;;;;AAqBA,IAAM2J,iBAAiB,UAAC3J,OAAD,EAAU6I,IAAV,EAAgC;MAAhBe,MAAgB,uEAAP,EAAO;;SAC9Cd,OAAP,GAAiB,KAAjB;MACMjC,QAAQ,IAAI0C,WAAJ,CAAgBV,IAAhB,EAAsBe,MAAtB,CAAd;QACMtB,OAAN,GAAgBtI,OAAhB;KACG;kBACaA,OAAd,EAAuB6G,KAAvB;GADF,QAEQ7G,UAAUA,QAAQ2D,UAF1B;CAJF;;;;;;;;;;;AAkBA,IAAMkG,qBAAqB,CAAC,MAAD,EAAS,OAAT,EAAkB,QAAlB,EAA4B,QAA5B,CAA3B;;AAEA,IAAMC,gBAAgB,UAAC9J,OAAD,EAAU6G,KAAV,EAAoB;MACrCgD,mBAAmB3L,OAAnB,CAA2B2I,MAAMgC,IAAjC,MAA2C,CAAC,CAA5C,IAAiD,OAAO7I,QAAQ6G,MAAMgC,IAAd,CAAP,KAA+B,UAAhF,IAA8F,CAAChC,MAAMsB,eAArG,IAAwH,CAACtB,MAAMkC,UAAlI,EAA8I;YACpIlC,MAAMgC,IAAd;GADF,MAEO;YACGiB,aAAR,CAAsBjD,KAAtB;;CAJJ;;;;;;;AAaA,CAAC,YAAM;MACC0C,cAAc,UAAC1C,KAAD,EAId;QAJsB+C,MAItB,uEAJ+B;eAC1B,KAD0B;kBAEvB,KAFuB;cAG3BvM;KACJ;;QACA0M,cAAcrL,SAASsL,WAAT,CAAqB,aAArB,CAAlB;gBACYC,eAAZ,CAA4BpD,KAA5B,EAAmC+C,OAAOd,OAA1C,EAAmDc,OAAOb,UAA1D,EAAsEa,OAAOM,MAA7E;WACOH,WAAP;GAPF;;cAUYtK,SAAZ,GAAwB/C,OAAO6M,WAAP,IAAsB7M,OAAO6M,WAAP,CAAmB9J,SAAjE;SACO8J,WAAP,GAAqBA,WAArB;CAZF;;;;;;;AAqBA,IAAML,gCAAiC,YAAK;MACtCiB,aAAa,KAAjB;MACMC,MAAM1N,OAAOgC,QAAnB;MACG0L,GAAH,EAAQ;QACAC,SAASD,IAAI7J,aAAJ,CAAkB,KAAlB,CAAf;QACMlB,QAAQgL,OAAOrG,SAAP,EAAd;WACOZ,WAAP,CAAmB/D,KAAnB;WACOyH,gBAAP,CAAwB,GAAxB,EAA6B,YAAW;mBACzB,IAAb;KADF;UAGMgD,aAAN,CAAoB,IAAIP,WAAJ,CAAgB,GAAhB,EAAqB,EAACT,SAAS,IAAV,EAArB,CAApB;;SAEKqB,UAAP;CAZoC,EAAtC;;AAeA,IAAMf,iCAAkC,YAAM;MACxC;QACEvK,OAAOwK,UAAX,CAAsB,OAAtB;GADF,CAEE,OAAMiB,CAAN,EAAS;WACF,KAAP;;SAEK,IAAP;CANqC,EAAvC;;;;;;;AC7KA;;;;;;;;;;;;;;AAcA,AAAO,IAAMC,QAAQ,UAASpE,OAAT,EAAkB;MAClC,8BAA8BrH,IAA9B,CAAmCJ,SAAS8L,UAA5C,KAA2D9L,SAAS+L,IAAvE,EAA6E;;GAA7E,MAEO;aACI3D,gBAAT,CAA0B,kBAA1B,EAA8CX,OAA9C,EAAuD,KAAvD;;SAEK,IAAP;CANK;;;;;;ACdP;;;;AAIA,AAEA;;;;;AAKA,IAAMuE,cAAchO,OAAO6B,CAA3B;;;;;;;;;;;AAWA,AAAO,IAAMoM,aAAa,YAAW;SAC5BpM,CAAP,GAAWmM,WAAX;SACO,IAAP;CAFK;;;;;;ACtBP;;;;AAIA,AACA,AAEA;;;;;;;;;;;AAWA,AAAO,IAAM9J,WAAW,UAASpC,QAAT,EAAmB;MACnCW,QAAQ,EAAd;OACK,IAAL,EAAW,mBAAW;QACjBa,QAAQY,QAAX,EAAqB;WACdZ,QAAQY,QAAb,EAAuB,iBAAS;YAC3B,CAACpC,QAAD,IAAcA,YAAYe,QAAQF,KAAR,EAAeb,QAAf,CAA7B,EAAwD;gBAChDc,IAAN,CAAWD,KAAX;;OAFJ;;GAFJ;SASOd,IAAEY,KAAF,CAAP;CAXK;;;;;;;;;;AAsBP,AAAO,IAAMyL,WAAW,YAAW;MAC3BzL,QAAQ,EAAd;OACK,IAAL,EAAW;WAAWA,MAAMG,IAAN,CAAWoG,KAAX,CAAiBvG,KAAjB,EAAwBvC,QAAQoD,QAAQa,UAAhB,CAAxB,CAAX;GAAX;SACOtC,IAAEY,KAAF,CAAP;CAHK;;;;;;;;;;;;;AAiBP,AAAO,IAAM0L,KAAK,UAAS5M,KAAT,EAAgB;SACzBkC,MAAM5C,IAAN,CAAW,IAAX,EAAiBU,KAAjB,EAAwBA,QAAQ,CAAhC,CAAP;CADK;;;;;;;;;;;;AAcP,AAAO,IAAM6M,MAAM,UAAS7M,KAAT,EAAgB;SAC1B,KAAKA,KAAL,CAAP;CADK;;;;;;;;;;;;;AAeP,AAAO,IAAMoM,SAAS,UAAS7L,QAAT,EAAmB;MACjCW,QAAQ,EAAd;OACK,IAAL,EAAW,mBAAW;QACjB,CAACX,QAAD,IAAcA,YAAYe,QAAQS,QAAQ2D,UAAhB,EAA4BnF,QAA5B,CAA7B,EAAqE;YAC7Dc,IAAN,CAAWU,QAAQ2D,UAAnB;;GAFJ;SAKOpF,IAAEY,KAAF,CAAP;CAPK;;;;;;;;;;;;;AAqBP,AAAO,IAAM4L,WAAW,UAASvM,QAAT,EAAmB;MACnCW,QAAQ,EAAd;OACK,IAAL,EAAW;WAAWjC,KAAK8C,QAAQ2D,UAAR,CAAmB/C,QAAxB,EAAkC,mBAAW;UAC9DoK,YAAYhL,OAAZ,KAAwB,CAACxB,QAAD,IAAcA,YAAYe,QAAQyL,OAAR,EAAiBxM,QAAjB,CAAlD,CAAH,EAAmF;cAC3Ec,IAAN,CAAW0L,OAAX;;KAFkB,CAAX;GAAX;SAKOzM,IAAEY,KAAF,CAAP;CAPK;;;;;;;;;;;;;AAqBP,AAAO,IAAMgB,QAAQ,UAAS8K,KAAT,EAAgBC,GAAhB,EAAqB;SACjC3M,IAAE,GAAG4B,KAAH,CAASuF,KAAT,CAAe,IAAf,EAAqB3D,SAArB,CAAF,CAAP;CADK;;;;;;;;;;;;AChIP;;;;;;;;;;;;;;;;;AAiBA,AAAO,IAAMoJ,aAAa;SAAO,OAAOC,GAAP,KAAe,UAAtB;CAAnB;;;;;;;;;;;;;;;AAeP,AAAO,IAAMC,UAAUrO,MAAMqO,OAAtB;;;;;;;AChCP;;;;AAIA,AAEA,IAAMxJ,MAAM,EAAZ;AACA,IAAItD,OAAI,EAAR;;;;AAIA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AAEA,IAAG,OAAOC,QAAP,KAAoB,WAAvB,EAAoC;SAC9BA,GAAJ;OACEe,OAAF,GAAYf,OAAZ;MACIU,IAAJ,GAAWV,IAAX;;;AAGFhB,OAAOe,IAAP,EAAU+M,YAAV,EAAwBC,UAAxB,EAAoC1C,IAApC;AACArL,OAAOqE,GAAP,EAAY2J,KAAZ,EAAmB7I,KAAnB,EAAwB8I,QAAxB,EAAkCC,GAAlC,EAAuCC,SAAvC,EAAkDC,QAAlD,EAA4DC,SAA5D,EAAuEC,QAAvE,EAAiFjF,KAAjF,EAAwFkF,aAAxF,EAAuGC,WAAvG,EAAoHC,gBAApH,EAAsIC,cAAtI;;AAEA3N,KAAEyC,EAAF,GAAOa,GAAP;;;;AAIAtD,KAAE4N,OAAF,GAAY,QAAZ;;;;AAIA5N,KAAEf,MAAF,GAAWA,MAAX;;;;AAIA,IAAG,OAAOsE,SAAP,KAAqB,WAAxB,EAAqC;OACjCA,SAAF,GAAcA,UAAUvD,KAAEyC,EAAZ,CAAd;;;;;AAKF,UAAezC,IAAf;;;;"}