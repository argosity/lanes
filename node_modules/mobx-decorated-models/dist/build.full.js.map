{"version":3,"file":"build.full.js","sources":["../lib/model-lookup.js","../lib/serializable.js","../lib/schema.js","../lib/class-decorator.js","../lib/property-decorators.js"],"sourcesContent":["const ModelsMap = new Map();\n\nfunction defaultModelLookup({ property, model = property }) {\n    if (typeof model === 'function') { return model; }\n    return ModelsMap[model] || ModelsMap[property];\n}\nlet modelLookup = defaultModelLookup;\n\nconst defaultRememberModel = (model) => {\n    ModelsMap[model.identifiedBy || model.name] = model;\n};\nlet rememberModel = defaultRememberModel;\n\nexport function registerModel(model) {\n    rememberModel(model);\n}\n\nexport function findModel(model, property) {\n    return modelLookup({ model, property });\n}\n\nexport function rememberModelUsing(fn) {\n    rememberModel = fn || defaultRememberModel;\n}\n\nexport function lookupModelUsing(fn) {\n    modelLookup = fn || defaultModelLookup;\n}\n","export function isSerializable(model, property) {\n    return !!(!model.$nonSerializable || !model.$nonSerializable[property]);\n}\n\nexport function markNonserializable(model, property) {\n    model.$nonSerializable = model.$nonSerializable || {};\n    model.$nonSerializable[property] = true;\n}\n","import { observable } from 'mobx';\n\nexport default function (model) {\n    if (model.$schema) {\n        return model.$schema;\n    }\n    const schema = observable.shallowMap();\n    Object.defineProperty(model, '$schema', {\n        enumerable: false,\n        writable: false,\n        configurable: true,\n        value: schema,\n    });\n    return schema;\n}\n","import {\n    serialize, deserialize, createModelSchema, primitive, list, object,\n    identifier, getDefaultModelSchema, update,\n} from 'serializr';\n\nimport { registerModel, findModel } from './model-lookup';\nimport { isSerializable, markNonserializable } from './serializable';\nimport getSchema from './schema';\n\nconst PendingLookups = [];\n\nfunction objectSerializer() {\n    return {\n        serializer(obj, prop, parent) {\n            return isSerializable(parent, prop) ? obj : undefined;\n        },\n        deserializer(json, cb) {\n            cb(null, json);\n        },\n    };\n}\n\nfunction addReference(parentModel, propName, options, cb) {\n    const model = findModel(options.model, propName);\n    if (model) {\n        getDefaultModelSchema(parentModel).props[propName] = cb(model, options, propName);\n    } else {\n        getDefaultModelSchema(parentModel).props[propName] = objectSerializer();\n        PendingLookups.push({ parentModel, propName, options, cb });\n    }\n}\n\nfunction getSerializer(options, defaultSerializer) {\n    let serializer;\n    if (options.type === 'object') {\n        serializer = objectSerializer;\n    } else if (options.type === 'array') {\n        serializer = list;\n    } else {\n        serializer = defaultSerializer;\n    }\n    const fns = serializer();\n    if (options.writeOnly) {\n        return {\n            serializer: () => undefined,\n            deserializer: fns.deserializer,\n        };\n    }\n    return fns;\n}\n\nconst Fields = {\n    identifier: options => getSerializer(options, identifier),\n    field: options => getSerializer(options, primitive),\n    session: options =>\n        getSerializer(Object.assign({}, options, { writeOnly: true }), primitive),\n};\n\nconst Associations = {\n    hasMany(modelKlass, options) {\n        const defaultSerializer = list(object(modelKlass));\n        return Object.assign(defaultSerializer, options, {\n            model: modelKlass,\n        });\n    },\n    belongsTo(modelKlass, options, propName) {\n        const defaultSerializer = object(getDefaultModelSchema(modelKlass));\n        return Object.assign(options, {\n            model: modelKlass,\n            deserializer(value, cb, context) {\n                defaultSerializer.deserializer(value, (err, model) => {\n                    if (!err && options.inverseOf) {\n                        markNonserializable(model, options.inverseOf);\n                        model[`${options.inverseOf}_association_name`] = propName;\n                        model[options.inverseOf] = context.target;\n                    }\n                    cb(err, model);\n                });\n            },\n            serializer(belongsTo, name, parent) {\n                if (!isSerializable(parent, name)) { return undefined; }\n                return defaultSerializer.serializer(belongsTo);\n            },\n        });\n    },\n};\n\n\nconst MixedInInstanceMethods = {\n    serialize() {\n        const schema = getDefaultModelSchema(this.constructor);\n        return serialize(schema, this);\n    },\n    update(json, callback) {\n        return update(getDefaultModelSchema(this.constructor), this, json, callback);\n    },\n};\n\nconst MixedInClassMethods = {\n    deserialize(json, callback) {\n        return deserialize(getDefaultModelSchema(this), json, callback);\n    },\n};\n\nfunction decorateModel(model) {\n    Object.assign(model.prototype, MixedInInstanceMethods);\n    Object.assign(model, MixedInClassMethods);\n\n    const schema = getSchema(model);\n    registerModel(model);\n    const serializeSchema = {};\n    schema.forEach(({ type, options }, name) => {\n        if (Fields[type]) {\n            serializeSchema[name] = Fields[type](options, name);\n        }\n    });\n    createModelSchema(model, serializeSchema);\n    schema.forEach(({ type, options }, name) => {\n        if (Associations[type]) {\n            addReference(model, name, options, Associations[type]);\n        }\n    });\n    for (let i = PendingLookups.length - 1; i >= 0; i -= 1) {\n        const { parentModel, propName, options, cb } = PendingLookups[i];\n        const referencedModel = findModel(options.model, propName);\n        if (referencedModel) {\n            const parentModelSchema = getDefaultModelSchema(parentModel);\n            parentModelSchema.props[propName] = cb(referencedModel, options, propName);\n            PendingLookups.splice(i, 1);\n        }\n    }\n}\n\nexport function modelDecorator(modelOrIdentifier) {\n    if (typeof modelOrIdentifier === 'function') {\n        modelOrIdentifier.identifiedBy = modelOrIdentifier.name;\n        return decorateModel(modelOrIdentifier);\n    }\n    return (model) => {\n        model.identifiedBy = modelOrIdentifier;\n        return decorateModel(model);\n    };\n}\n\nexport function unresolvedAssociations() {\n    return PendingLookups.map(({ parentModel: model, propName: property }) => (\n        { model, property }\n    ));\n}\n","import { observable, intercept } from 'mobx';\nimport { getDefaultModelSchema } from 'serializr';\n\nimport { findModel } from './model-lookup';\nimport getModelSchema from './schema';\nimport { markNonserializable } from './serializable'\n\nfunction addLazyInitializer(target, fn) {\n    target.__mobxLazyInitializers.push(fn);\n}\n\nfunction setupModel({\n    attrs, modelClass: Klass, array, defaultAttributes,\n    inverseOf, parentModel, parentModelProp,\n}) {\n    if (!attrs || typeof attrs !== 'object') {\n        return attrs;\n    }\n    if (defaultAttributes) {\n        if (typeof defaultAttributes === 'function') {\n            defaultAttributes = defaultAttributes.call(parentModel, array, parentModel);\n        }\n        Object.keys(defaultAttributes).forEach((key) => {\n            if (!attrs[key]) {\n                attrs[key] = defaultAttributes[key];\n            }\n        });\n    }\n    if (inverseOf) {\n        if (parentModelProp) {\n            attrs[`${inverseOf}_association_name`] = parentModelProp;\n        }\n        attrs[inverseOf] = parentModel;\n    }\n    const model = (Klass && !(attrs instanceof Klass)) ? new Klass(attrs) : attrs;\n    if (inverseOf) {\n        markNonserializable(model, inverseOf);\n    }\n    return model;\n}\n\nfunction onBelongsToSet(change,\n                        { modelClass, defaultAttributes, inverseOf,\n                          parentModel, parentModelProp }) {\n    change.newValue = setupModel({\n        attrs: change.newValue, modelClass,\n        defaultAttributes, inverseOf, parentModel, parentModelProp,\n    });\n    return change;\n}\n\nfunction onHasManySet(change,\n                      { modelClass, defaultAttributes, inverseOf,\n                        parentModel, parentModelProp }) {\n    if (change.type !== 'update' || !change.newValue) { return change; }\n    const { newValue: array } = change;\n\n    for (let i = 0; i < array.length; i += 1) {\n        array[i] = setupModel({\n            attrs: array[i], array, modelClass,\n            defaultAttributes, inverseOf, parentModel, parentModelProp,\n        });\n    }\n\n    if (parentModel[parentModelProp]) {\n        parentModel[parentModelProp].replace(array);\n        return null;\n    } else {\n        change.newValue = observable.array(array);\n        return change;\n    }\n}\n\nfunction onCollectionChangeInterceptor(\n    { modelClass, model, defaults: defaultAttributes, inverseOf },\n    parentModel, parentModelProp,\n) {\n    return (change) => {\n        if (!change.newValue) {\n            change.newValue = {};\n        }\n        if (!modelClass) {\n            modelClass = findModel(model, parentModelProp);\n        }\n        if (change.type === 'splice') {\n            for (let i = 0; i < change.added.length; i += 1) {\n                change.added[i] = setupModel({\n                    attrs: change.added[i], array: change.object, modelClass,\n                    defaultAttributes, inverseOf, parentModel, parentModelProp });\n            }\n        } else if (change.type === 'update') {\n            change.newValue = setupModel({\n                attrs: change.newValue, array: change.object, modelClass,\n                defaultAttributes, inverseOf, parentModel, parentModelProp });\n        }\n        return change;\n    };\n}\n\nfunction buildCollection(options, parentModel, parentModelProp) {\n    const ary = observable.array([]);\n    if (options.classId || options.model) {\n        ary.intercept(onCollectionChangeInterceptor(options, parentModel, parentModelProp));\n    }\n    return ary;\n}\n\nconst Initializers = {\n    object: () => observable.object({}),\n    array: buildCollection,\n};\n\nconst TypeInitializers = {\n    hasMany: buildCollection,\n};\n\nfunction getInitializer(type, options, propName) {\n    const fn = TypeInitializers[type] || Initializers[options.type];\n    if (!fn) { return undefined; }\n    return function () { // eslint-disable-line func-names\n        return fn(options, this, propName);\n    };\n}\n\nfunction addAttribute(type, target, property, descriptor, options = {}) {\n    getModelSchema(target.constructor).set(property, { name: property, type, options });\n    const initializer = getInitializer(type, options, property);\n    if (initializer) {\n        descriptor.initializer = initializer;\n    }\n    const definition = observable(target, property, descriptor);\n    return definition;\n}\n\nfunction buildAttributeDecorator(type, args, attributeAddFn = addAttribute) {\n    if ((typeof args[0] === 'object') && args.length === 1) {\n        return (target, property, descriptor) =>\n            attributeAddFn(type, target, property, descriptor, args[0]);\n    }\n    return attributeAddFn(type, ...args, {});\n}\n\nfunction interceptingDecorator(interceptingFn) {\n    return (type, target, property, descriptor, options = {}) => {\n        const decorator = addAttribute(type, target, property, descriptor, options);\n        addLazyInitializer(target, (model) => {\n            const schema = getDefaultModelSchema(target);\n            if (schema && schema.props[property]) {\n                const schemaProps = schema.props[property];\n                intercept(model, property, (change => interceptingFn(change, {\n                    inverseOf:         schemaProps.inverseOf,\n                    modelClass:        schemaProps.model,\n                    parentModel:       model,\n                    parentModelProp:   property,\n                    defaultAttributes: schemaProps.defaults,\n                })));\n            }\n        });\n        return decorator;\n    };\n}\n\n\nconst hasMany = (...args) => buildAttributeDecorator(\n    'hasMany', args, interceptingDecorator(onHasManySet),\n);\n\nconst belongsTo = (...args) => buildAttributeDecorator(\n    'belongsTo', args, interceptingDecorator(onBelongsToSet),\n);\n\nconst identifier = (...args) => buildAttributeDecorator('identifier', args);\nconst field = (...args) => buildAttributeDecorator('field', args);\nconst session = (...args) => buildAttributeDecorator('session', args);\n\nexport { field, session, belongsTo, hasMany, identifier, buildCollection };\n"],"names":["ModelsMap","Map","defaultModelLookup","property","model","modelLookup","defaultRememberModel","identifiedBy","name","rememberModel","registerModel","findModel","rememberModelUsing","fn","lookupModelUsing","isSerializable","$nonSerializable","markNonserializable","$schema","schema","observable","shallowMap","defineProperty","PendingLookups","objectSerializer","obj","prop","parent","undefined","json","cb","addReference","parentModel","propName","options","props","push","getSerializer","defaultSerializer","serializer","type","list","fns","writeOnly","deserializer","Fields","identifier","primitive","Object","assign","Associations","modelKlass","object","getDefaultModelSchema","value","context","err","inverseOf","target","belongsTo","MixedInInstanceMethods","constructor","serialize","callback","update","MixedInClassMethods","deserialize","decorateModel","prototype","getSchema","serializeSchema","forEach","i","length","referencedModel","parentModelSchema","splice","modelDecorator","modelOrIdentifier","unresolvedAssociations","map","addLazyInitializer","__mobxLazyInitializers","setupModel","attrs","Klass","modelClass","array","defaultAttributes","parentModelProp","call","keys","key","onBelongsToSet","change","newValue","onHasManySet","replace","onCollectionChangeInterceptor","defaults","added","buildCollection","ary","classId","intercept","Initializers","TypeInitializers","getInitializer","addAttribute","descriptor","set","initializer","definition","buildAttributeDecorator","args","attributeAddFn","babelHelpers.typeof","interceptingDecorator","interceptingFn","decorator","schemaProps","hasMany","field","session"],"mappings":"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"}