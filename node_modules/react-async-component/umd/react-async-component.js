(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"));
	else if(typeof define === 'function' && define.amd)
		define(["react"], factory);
	else if(typeof exports === 'object')
		exports["react-async-component"] = factory(require("react"));
	else
		root["react-async-component"] = factory(root["React"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_0__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.l = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };

/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};

/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};

/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 6);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_0__;

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// Duck type promise check.
var isPromise = function isPromise(x) {
  return (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && typeof x.then === 'function';
};

var validSSRModes = ['render', 'defer', 'boundary'];

function createAsyncComponent(args) {
  var name = args.name,
      resolve = args.resolve,
      _args$es6Aware = args.es6Aware,
      es6Aware = _args$es6Aware === undefined ? true : _args$es6Aware,
      _args$ssrMode = args.ssrMode,
      ssrMode = _args$ssrMode === undefined ? 'render' : _args$ssrMode,
      Loading = args.Loading;


  if (validSSRModes.indexOf(ssrMode) === -1) {
    throw new Error('Invalid ssrMode provided to createAsyncComponent');
  }

  var id = null;

  // Takes the given module and if it has a ".default" the ".default" will
  // be returned. i.e. handy when you could be dealing with es6 imports.
  var es6Resolve = function es6Resolve(x) {
    return es6Aware && (typeof x === 'function' || (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object') && typeof x.default !== 'undefined' ? x.default : x;
  };

  var getResolver = function getResolver() {
    var resolver = resolve();
    if (!isPromise(resolver)) {
      throw new Error('The "resolve" function on an AsyncComponent should return a Promise');
    }
    return resolver;
  };

  var AsyncComponent = function (_React$Component) {
    _inherits(AsyncComponent, _React$Component);

    function AsyncComponent(props, context) {
      _classCallCheck(this, AsyncComponent);

      var _this = _possibleConstructorReturn(this, (AsyncComponent.__proto__ || Object.getPrototypeOf(AsyncComponent)).call(this, props));

      var asyncComponents = context.asyncComponents,
          asyncComponentsAncestor = context.asyncComponentsAncestor;


      _this.state = { Component: null };

      // Assign a unique id to this instance if it hasn't already got one.
      // Note: the closure usage.
      var getNextId = asyncComponents.getNextId,
          getComponent = asyncComponents.getComponent;

      if (!id) {
        id = getNextId();
      }

      // Try resolve the component.
      var Component = es6Resolve(getComponent(id));
      if (Component) {
        _this.state = { Component: Component };
      } else {
        _this.getAsyncComponentData = function () {
          return {
            id: id,
            defer: ssrMode === 'defer' || asyncComponentsAncestor && asyncComponentsAncestor.isBoundary,
            getResolver: function getResolver() {
              return _this.resolveComponent();
            }
          };
        };
      }
      return _this;
    }

    _createClass(AsyncComponent, [{
      key: 'getChildContext',
      value: function getChildContext() {
        if (ssrMode !== 'boundary') {
          return undefined;
        }
        return {
          asyncComponentsAncestor: {
            isBoundary: true
          }
        };
      }
    }, {
      key: 'componentDidMount',
      value: function componentDidMount() {
        if (!this.state.Component) {
          this.resolveComponent(this.props);
        }
      }
    }, {
      key: 'resolveComponent',
      value: function resolveComponent() {
        var _this2 = this;

        return getResolver().then(function (Component) {
          if (_this2.unmounted) {
            // The component is unmounted, so no need to set the state.
            return;
          }
          _this2.context.asyncComponents.registerComponent(id, Component);
          if (_this2.setState) {
            _this2.setState({
              Component: es6Resolve(Component)
            });
          }
        });
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        this.unmounted = true;
      }
    }, {
      key: 'render',
      value: function render() {
        var Component = this.state.Component;
        // eslint-disable-next-line no-nested-ternary

        return Component ? _react2.default.createElement(Component, this.props) : Loading ? _react2.default.createElement(Loading, this.props) : null;
      }
    }]);

    return AsyncComponent;
  }(_react2.default.Component);

  AsyncComponent.childContextTypes = {
    asyncComponentsAncestor: _react2.default.PropTypes.shape({
      isBoundary: _react2.default.PropTypes.bool
    })
  };

  AsyncComponent.contextTypes = {
    asyncComponents: _react2.default.PropTypes.shape({
      getNextId: _react2.default.PropTypes.func.isRequired,
      getComponent: _react2.default.PropTypes.func.isRequired,
      registerComponent: _react2.default.PropTypes.func.isRequired
    }).isRequired
  };

  AsyncComponent.displayName = name || 'AsyncComponent';

  return AsyncComponent;
}

exports.default = createAsyncComponent;

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.default = withAsyncComponents;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactTreeWalker = __webpack_require__(5);

var _reactTreeWalker2 = _interopRequireDefault(_reactTreeWalker);

var _AsyncComponentProvider = __webpack_require__(3);

var _AsyncComponentProvider2 = _interopRequireDefault(_AsyncComponentProvider);

var _constants = __webpack_require__(4);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function createExecContext() {
  var idPointer = 0;
  var registry = {};
  return {
    getNextId: function getNextId() {
      idPointer += 1;
      return idPointer;
    },
    registerComponent: function registerComponent(id, Component) {
      registry[id] = Component;
    },
    getComponent: function getComponent(id) {
      return registry[id];
    },
    getResolved: function getResolved() {
      return Object.keys(registry).reduce(function (acc, cur) {
        return Object.assign(acc, _defineProperty({}, cur, true));
      }, {});
    }
  };
}

function withAsyncComponents(app) {
  var execContext = createExecContext();

  var isBrowser = typeof window !== 'undefined';
  var rehydrateState = isBrowser && typeof window[_constants.STATE_IDENTIFIER] !== 'undefined' ? window[_constants.STATE_IDENTIFIER] : null;

  var appWithAsyncComponents = _react2.default.createElement(
    _AsyncComponentProvider2.default,
    { execContext: execContext },
    app
  );

  if (isBrowser && !rehydrateState) {
    return Promise.resolve({
      appWithAsyncComponents: appWithAsyncComponents
    });
  }

  var doWalk = function doWalk(el) {
    var ctx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var fetchRoot = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

    var resolvers = [];

    var visitor = function visitor(element, instance, context) {
      var skipRoot = !fetchRoot && element === el;
      if (instance && typeof instance.getAsyncComponentData === 'function' && !skipRoot) {
        var _instance$getAsyncCom = instance.getAsyncComponentData(),
            id = _instance$getAsyncCom.id,
            defer = _instance$getAsyncCom.defer,
            getResolver = _instance$getAsyncCom.getResolver;

        if (rehydrateState) {
          if (!rehydrateState.resolved[id]) {
            return false;
          }
          rehydrateState[id] = false;
        } else if (defer) {
          // Deferred, so return false to stop walking down this branch.
          return false;
        }

        var resolver = getResolver();
        resolvers.push({
          resolver: resolver,
          element: element,
          context: Object.assign(context, { ASYNC_WALKER_BOUNDARY: true })
        });
        return false;
      }
      return undefined;
    };

    (0, _reactTreeWalker2.default)(el, visitor, ctx);

    var nestedPromises = resolvers.map(function (_ref) {
      var resolver = _ref.resolver,
          element = _ref.element,
          context = _ref.context;
      return resolver.then(function () {
        return doWalk(element, context);
      });
    });

    return nestedPromises.length > 0 ? Promise.all(nestedPromises) : Promise.resolve([]);
  };

  return doWalk(appWithAsyncComponents, {}, true)
  // Swallow errors.
  .catch(function () {
    return undefined;
  })
  // Ensure that state rehydration is killed
  .then(function () {
    if ((typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object') {
      window[_constants.STATE_IDENTIFIER] = null;
    }
  }).then(function () {
    return {
      appWithAsyncComponents: appWithAsyncComponents,
      state: { resolved: execContext.getResolved() },
      STATE_IDENTIFIER: _constants.STATE_IDENTIFIER
    };
  });
}

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AsyncComponentProvider = function (_React$Component) {
  _inherits(AsyncComponentProvider, _React$Component);

  function AsyncComponentProvider() {
    _classCallCheck(this, AsyncComponentProvider);

    return _possibleConstructorReturn(this, (AsyncComponentProvider.__proto__ || Object.getPrototypeOf(AsyncComponentProvider)).apply(this, arguments));
  }

  _createClass(AsyncComponentProvider, [{
    key: 'getChildContext',
    value: function getChildContext() {
      return {
        asyncComponents: {
          getNextId: this.props.execContext.getNextId,
          getComponent: this.props.execContext.getComponent,
          registerComponent: this.props.execContext.registerComponent
        }
      };
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.Children.only(this.props.children);
    }
  }]);

  return AsyncComponentProvider;
}(_react2.default.Component);

AsyncComponentProvider.propTypes = {
  children: _react2.default.PropTypes.node.isRequired,
  execContext: _react2.default.PropTypes.shape({
    getNextId: _react2.default.PropTypes.func.isRequired,
    getComponent: _react2.default.PropTypes.func.isRequired,
    registerComponent: _react2.default.PropTypes.func.isRequired
  }).isRequired
};

AsyncComponentProvider.childContextTypes = {
  asyncComponents: _react2.default.PropTypes.shape({
    getNextId: _react2.default.PropTypes.func.isRequired,
    getComponent: _react2.default.PropTypes.func.isRequired,
    registerComponent: _react2.default.PropTypes.func.isRequired
  }).isRequired
};

exports.default = AsyncComponentProvider;

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

/* eslint-disable import/prefer-default-export */

var STATE_IDENTIFIER = exports.STATE_IDENTIFIER = '__REACT_ASYNC_COMPONENTS_STATE__';

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isPromise = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
// Extracted from: https://github.com/apollostack/react-apollo/blob/master/src/server.ts

// eslint-disable-next-line import/no-extraneous-dependencies


exports.default = reactTreeWalker;

var _react = __webpack_require__(0);

var isPromise = exports.isPromise = function isPromise(x) {
  return (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && typeof x.then === 'function';
};

// Recurse an React Element tree, running visitor on each element.
// If visitor returns `false`, don't call the element's render function
//   or recurse into its child elements
function reactTreeWalker(element, visitor) {
  var context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  // Is this element a Component?
  if (typeof element.type === 'function') {
    var Component = element.type;
    var props = Object.assign({}, Component.defaultProps, element.props);
    var childContext = context;
    var child = void 0;

    // Is this a class component? (http://bit.ly/2j9Ifk3)
    var isReactClassComponent = Component.prototype && (Component.prototype.isReactComponent || Component.prototype.isPureReactComponent);

    if (isReactClassComponent) {
      var _ret = function () {
        var instance = new Component(props, context);
        // In case the user doesn't pass these to super in the constructor
        instance.props = instance.props || props;
        instance.context = instance.context || context;

        // Make the setState synchronous.
        instance.setState = function (newState) {
          instance.state = Object.assign({}, instance.state, newState);
        };

        // Call componentWillMount if it exists.
        if (instance.componentWillMount) {
          instance.componentWillMount();
        }

        // Ensure the child context is initialised if it is available. We will
        // need to pass it down the tree.
        if (instance.getChildContext) {
          childContext = Object.assign({}, context, instance.getChildContext());
        }

        // Hit up our visitor!
        if (visitor(element, instance, context) === false) {
          // Visitor returned false, indicating a desire to not traverse.
          return {
            v: void 0
          };
        }

        // Get the render output as the child.
        child = instance.render();
      }();

      if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
    } else {
      // Stateless Functional Component

      // Hit up our visitor!
      if (visitor(element, null, context) === false) {
        // Visitor returned false, indicating a desire to not traverse.
        return;
      }

      // Get the output for the function, as the child.
      child = Component(props, context);
    }

    // Only continue walking if a child exists.
    if (child) {
      reactTreeWalker(child, visitor, childContext);
    }
  } else {
    // This must be a basic element, such as a string or dom node.

    // Hit up our visitor!
    if (visitor(element, null, context) === false) {
      // Visitor returned false, indicating a desire to not traverse.
      return;
    }

    // If the element has children then we will walk them.
    if (element.props && element.props.children) {
      _react.Children.forEach(element.props.children, function (child) {
        if (child) {
          reactTreeWalker(child, visitor, context);
        }
      });
    }
  }
}

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.withAsyncComponents = exports.createAsyncComponent = undefined;

var _createAsyncComponent = __webpack_require__(1);

var _createAsyncComponent2 = _interopRequireDefault(_createAsyncComponent);

var _withAsyncComponents = __webpack_require__(2);

var _withAsyncComponents2 = _interopRequireDefault(_withAsyncComponents);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.createAsyncComponent = _createAsyncComponent2.default;
exports.withAsyncComponents = _withAsyncComponents2.default;

/***/ }
/******/ ]);
});